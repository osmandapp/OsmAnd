apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'ivy-publish'

configurations {
	android
}

//tasks.withType(JavaCompile) {
//	sourceCompatibility = "1.7"
//	targetCompatibility = "1.7"
//	options.encoding = 'UTF-8'
//}

task collectRoutingResources(type: Sync) {
	from "../../resources/routing"
	into "src/main/resources/net/osmand/router"
	include "*.xml"
}

task collectMiscResources(type: Copy) {
	into "src/main/resources/net/osmand/osm"
	from("../../resources/obf_creation") {
		include "rendering_types.xml"
	}
	from("../../resources/poi") {
		include "poi_types.xml"
	}
}

task collectRenderingStylesResources(type: Sync) {
	from "../../resources/rendering_styles"
	into "src/main/resources/net/osmand/render"
	include "*.xml"
}

task collectRegionsInfoResources(type: Download)  {
	src 'https://creator.osmand.net/basemap/regions.ocbf'
	dest 'src/main/resources/net/osmand/map/regions.ocbf'
	onlyIfModified true
}


task collectTestPhrasesResources(type: Copy) {
	into "src/test/resources/phrases/en/"
	from("../OsmAnd/res/values") {
		include "phrases.xml"
	}
}

task collectTestResources(type: Copy) {
	into "src/test/resources/"
	from("../../resources/test-resources") {
		include "*"
		include "/search/*"
		include "/routing/*"
	}
	from("../../resources/poi") {
		include "poi_types.xml"
	}
}

processResources {
	dependsOn collectRoutingResources,
		collectRenderingStylesResources,
		collectRegionsInfoResources,
		collectMiscResources
}

processTestResources {
	dependsOn collectTestResources, collectTestPhrasesResources
}

task collectExternalResources {
	dependsOn collectRoutingResources,
		collectRenderingStylesResources,
		collectRegionsInfoResources,
		collectTestResources,
		collectTestPhrasesResources,
		collectMiscResources
}

task androidJar(type: Jar) {
	if (!project.hasProperty('osmandCoreSimple')) {
		dependsOn collectExternalResources, build
	} else {
		dependsOn build
	}
	appendix = "android"
	from (sourceSets.main.java.outputDir) {
		exclude("**/PlatformUtil.*")
	}
	from sourceSets.main.resources
}

compileJava {
	if (!project.hasProperty('osmandCoreSimple')) {
		dependsOn collectExternalResources
	}
}

artifacts {
	android androidJar
}

version = System.getenv("OSMAND_BINARIES_IVY_REVISION") ?: "master-snapshot"
publishing {
	repositories {
		ivy {
			url = System.getenv("OSMAND_BINARIES_IVY_ROOT") ?: "./"
		}
	}
    publications {
        maven(MavenPublication) {
			artifactId "osmand-base"
            from components.java
        }
		ivyJava(IvyPublication) {
			artifact androidJar {
				classifier 'android'
			}
		}
	}
}

dependencies {
	testImplementation 'junit:junit:4.12'
	testImplementation 'org.hamcrest:hamcrest-core:1.3'
	implementation group: 'commons-logging', name: 'commons-logging', version: '1.2'
	implementation 'com.google.code.gson:gson:2.8.9'
	implementation group: 'org.json', name: 'json', version: '20171018'
	implementation 'org.apache.commons:commons-compress:1.17'
	implementation 'com.moparisthebest:junidecode:0.1.1'
	implementation 'com.vividsolutions:jts-core:1.14.0'
	implementation 'com.google.openlocationcode:openlocationcode:1.0.4'
	implementation ('com.github.scribejava:scribejava-apis:7.1.1') {
		exclude group: "com.fasterxml.jackson.core"
	}
	// turn off for now
	//implementation 'com.atilika.kuromoji:kuromoji-ipadic:0.9.0'
	implementation 'net.sf.kxml:kxml2:2.1.8'
	implementation fileTree(include: ['*.jar'], dir: 'libs')
}

