// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osmand_index.proto

package net.osmand.binary;

public final class OsmandIndex {
  private OsmandIndex() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface OsmAndStoredIndexOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 version = 1;
    /**
     * <code>required uint32 version = 1;</code>
     */
    boolean hasVersion();
    /**
     * <code>required uint32 version = 1;</code>
     */
    int getVersion();

    // required int64 dateCreated = 18;
    /**
     * <code>required int64 dateCreated = 18;</code>
     *
     * <pre>
     * System.currentTimeMillis()
     * </pre>
     */
    boolean hasDateCreated();
    /**
     * <code>required int64 dateCreated = 18;</code>
     *
     * <pre>
     * System.currentTimeMillis()
     * </pre>
     */
    long getDateCreated();

    // repeated .OsmAnd.OBF.FileIndex fileIndex = 7;
    /**
     * <code>repeated .OsmAnd.OBF.FileIndex fileIndex = 7;</code>
     */
    java.util.List<net.osmand.binary.OsmandIndex.FileIndex> 
        getFileIndexList();
    /**
     * <code>repeated .OsmAnd.OBF.FileIndex fileIndex = 7;</code>
     */
    net.osmand.binary.OsmandIndex.FileIndex getFileIndex(int index);
    /**
     * <code>repeated .OsmAnd.OBF.FileIndex fileIndex = 7;</code>
     */
    int getFileIndexCount();
  }
  /**
   * Protobuf type {@code OsmAnd.OBF.OsmAndStoredIndex}
   */
  public static final class OsmAndStoredIndex extends
      com.google.protobuf.GeneratedMessageLite
      implements OsmAndStoredIndexOrBuilder {
    // Use OsmAndStoredIndex.newBuilder() to construct.
    private OsmAndStoredIndex(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private OsmAndStoredIndex(boolean noInit) {}

    private static final OsmAndStoredIndex defaultInstance;
    public static OsmAndStoredIndex getDefaultInstance() {
      return defaultInstance;
    }

    public OsmAndStoredIndex getDefaultInstanceForType() {
      return defaultInstance;
    }

    private OsmAndStoredIndex(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              version_ = input.readUInt32();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                fileIndex_ = new java.util.ArrayList<net.osmand.binary.OsmandIndex.FileIndex>();
                mutable_bitField0_ |= 0x00000004;
              }
              fileIndex_.add(input.readMessage(net.osmand.binary.OsmandIndex.FileIndex.PARSER, extensionRegistry));
              break;
            }
            case 144: {
              bitField0_ |= 0x00000002;
              dateCreated_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          fileIndex_ = java.util.Collections.unmodifiableList(fileIndex_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<OsmAndStoredIndex> PARSER =
        new com.google.protobuf.AbstractParser<OsmAndStoredIndex>() {
      public OsmAndStoredIndex parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OsmAndStoredIndex(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OsmAndStoredIndex> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 version = 1;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>required uint32 version = 1;</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 version = 1;</code>
     */
    public int getVersion() {
      return version_;
    }

    // required int64 dateCreated = 18;
    public static final int DATECREATED_FIELD_NUMBER = 18;
    private long dateCreated_;
    /**
     * <code>required int64 dateCreated = 18;</code>
     *
     * <pre>
     * System.currentTimeMillis()
     * </pre>
     */
    public boolean hasDateCreated() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 dateCreated = 18;</code>
     *
     * <pre>
     * System.currentTimeMillis()
     * </pre>
     */
    public long getDateCreated() {
      return dateCreated_;
    }

    // repeated .OsmAnd.OBF.FileIndex fileIndex = 7;
    public static final int FILEINDEX_FIELD_NUMBER = 7;
    private java.util.List<net.osmand.binary.OsmandIndex.FileIndex> fileIndex_;
    /**
     * <code>repeated .OsmAnd.OBF.FileIndex fileIndex = 7;</code>
     */
    public java.util.List<net.osmand.binary.OsmandIndex.FileIndex> getFileIndexList() {
      return fileIndex_;
    }
    /**
     * <code>repeated .OsmAnd.OBF.FileIndex fileIndex = 7;</code>
     */
    public java.util.List<? extends net.osmand.binary.OsmandIndex.FileIndexOrBuilder> 
        getFileIndexOrBuilderList() {
      return fileIndex_;
    }
    /**
     * <code>repeated .OsmAnd.OBF.FileIndex fileIndex = 7;</code>
     */
    public int getFileIndexCount() {
      return fileIndex_.size();
    }
    /**
     * <code>repeated .OsmAnd.OBF.FileIndex fileIndex = 7;</code>
     */
    public net.osmand.binary.OsmandIndex.FileIndex getFileIndex(int index) {
      return fileIndex_.get(index);
    }
    /**
     * <code>repeated .OsmAnd.OBF.FileIndex fileIndex = 7;</code>
     */
    public net.osmand.binary.OsmandIndex.FileIndexOrBuilder getFileIndexOrBuilder(
        int index) {
      return fileIndex_.get(index);
    }

    private void initFields() {
      version_ = 0;
      dateCreated_ = 0L;
      fileIndex_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDateCreated()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFileIndexCount(); i++) {
        if (!getFileIndex(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, version_);
      }
      for (int i = 0; i < fileIndex_.size(); i++) {
        output.writeMessage(7, fileIndex_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(18, dateCreated_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, version_);
      }
      for (int i = 0; i < fileIndex_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fileIndex_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(18, dateCreated_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.osmand.binary.OsmandIndex.OsmAndStoredIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.OsmAndStoredIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.OsmAndStoredIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.OsmAndStoredIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.OsmAndStoredIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.OsmAndStoredIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.OsmAndStoredIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.OsmAndStoredIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.OsmAndStoredIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.OsmAndStoredIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandIndex.OsmAndStoredIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code OsmAnd.OBF.OsmAndStoredIndex}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          net.osmand.binary.OsmandIndex.OsmAndStoredIndex, Builder>
        implements net.osmand.binary.OsmandIndex.OsmAndStoredIndexOrBuilder {
      // Construct using net.osmand.binary.OsmandIndex.OsmAndStoredIndex.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        dateCreated_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        fileIndex_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public net.osmand.binary.OsmandIndex.OsmAndStoredIndex getDefaultInstanceForType() {
        return net.osmand.binary.OsmandIndex.OsmAndStoredIndex.getDefaultInstance();
      }

      public net.osmand.binary.OsmandIndex.OsmAndStoredIndex build() {
        net.osmand.binary.OsmandIndex.OsmAndStoredIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.osmand.binary.OsmandIndex.OsmAndStoredIndex buildPartial() {
        net.osmand.binary.OsmandIndex.OsmAndStoredIndex result = new net.osmand.binary.OsmandIndex.OsmAndStoredIndex(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dateCreated_ = dateCreated_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          fileIndex_ = java.util.Collections.unmodifiableList(fileIndex_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.fileIndex_ = fileIndex_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(net.osmand.binary.OsmandIndex.OsmAndStoredIndex other) {
        if (other == net.osmand.binary.OsmandIndex.OsmAndStoredIndex.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasDateCreated()) {
          setDateCreated(other.getDateCreated());
        }
        if (!other.fileIndex_.isEmpty()) {
          if (fileIndex_.isEmpty()) {
            fileIndex_ = other.fileIndex_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureFileIndexIsMutable();
            fileIndex_.addAll(other.fileIndex_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVersion()) {
          
          return false;
        }
        if (!hasDateCreated()) {
          
          return false;
        }
        for (int i = 0; i < getFileIndexCount(); i++) {
          if (!getFileIndex(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.osmand.binary.OsmandIndex.OsmAndStoredIndex parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.osmand.binary.OsmandIndex.OsmAndStoredIndex) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 version = 1;
      private int version_ ;
      /**
       * <code>required uint32 version = 1;</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 version = 1;</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>required uint32 version = 1;</code>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000001;
        version_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 version = 1;</code>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        
        return this;
      }

      // required int64 dateCreated = 18;
      private long dateCreated_ ;
      /**
       * <code>required int64 dateCreated = 18;</code>
       *
       * <pre>
       * System.currentTimeMillis()
       * </pre>
       */
      public boolean hasDateCreated() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 dateCreated = 18;</code>
       *
       * <pre>
       * System.currentTimeMillis()
       * </pre>
       */
      public long getDateCreated() {
        return dateCreated_;
      }
      /**
       * <code>required int64 dateCreated = 18;</code>
       *
       * <pre>
       * System.currentTimeMillis()
       * </pre>
       */
      public Builder setDateCreated(long value) {
        bitField0_ |= 0x00000002;
        dateCreated_ = value;
        
        return this;
      }
      /**
       * <code>required int64 dateCreated = 18;</code>
       *
       * <pre>
       * System.currentTimeMillis()
       * </pre>
       */
      public Builder clearDateCreated() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dateCreated_ = 0L;
        
        return this;
      }

      // repeated .OsmAnd.OBF.FileIndex fileIndex = 7;
      private java.util.List<net.osmand.binary.OsmandIndex.FileIndex> fileIndex_ =
        java.util.Collections.emptyList();
      private void ensureFileIndexIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          fileIndex_ = new java.util.ArrayList<net.osmand.binary.OsmandIndex.FileIndex>(fileIndex_);
          bitField0_ |= 0x00000004;
         }
      }

      /**
       * <code>repeated .OsmAnd.OBF.FileIndex fileIndex = 7;</code>
       */
      public java.util.List<net.osmand.binary.OsmandIndex.FileIndex> getFileIndexList() {
        return java.util.Collections.unmodifiableList(fileIndex_);
      }
      /**
       * <code>repeated .OsmAnd.OBF.FileIndex fileIndex = 7;</code>
       */
      public int getFileIndexCount() {
        return fileIndex_.size();
      }
      /**
       * <code>repeated .OsmAnd.OBF.FileIndex fileIndex = 7;</code>
       */
      public net.osmand.binary.OsmandIndex.FileIndex getFileIndex(int index) {
        return fileIndex_.get(index);
      }
      /**
       * <code>repeated .OsmAnd.OBF.FileIndex fileIndex = 7;</code>
       */
      public Builder setFileIndex(
          int index, net.osmand.binary.OsmandIndex.FileIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFileIndexIsMutable();
        fileIndex_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.FileIndex fileIndex = 7;</code>
       */
      public Builder setFileIndex(
          int index, net.osmand.binary.OsmandIndex.FileIndex.Builder builderForValue) {
        ensureFileIndexIsMutable();
        fileIndex_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.FileIndex fileIndex = 7;</code>
       */
      public Builder addFileIndex(net.osmand.binary.OsmandIndex.FileIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFileIndexIsMutable();
        fileIndex_.add(value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.FileIndex fileIndex = 7;</code>
       */
      public Builder addFileIndex(
          int index, net.osmand.binary.OsmandIndex.FileIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFileIndexIsMutable();
        fileIndex_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.FileIndex fileIndex = 7;</code>
       */
      public Builder addFileIndex(
          net.osmand.binary.OsmandIndex.FileIndex.Builder builderForValue) {
        ensureFileIndexIsMutable();
        fileIndex_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.FileIndex fileIndex = 7;</code>
       */
      public Builder addFileIndex(
          int index, net.osmand.binary.OsmandIndex.FileIndex.Builder builderForValue) {
        ensureFileIndexIsMutable();
        fileIndex_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.FileIndex fileIndex = 7;</code>
       */
      public Builder addAllFileIndex(
          java.lang.Iterable<? extends net.osmand.binary.OsmandIndex.FileIndex> values) {
        ensureFileIndexIsMutable();
        super.addAll(values, fileIndex_);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.FileIndex fileIndex = 7;</code>
       */
      public Builder clearFileIndex() {
        fileIndex_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.FileIndex fileIndex = 7;</code>
       */
      public Builder removeFileIndex(int index) {
        ensureFileIndexIsMutable();
        fileIndex_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndStoredIndex)
    }

    static {
      defaultInstance = new OsmAndStoredIndex(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndStoredIndex)
  }

  public interface FileIndexOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int64 size = 1;
    /**
     * <code>required int64 size = 1;</code>
     */
    boolean hasSize();
    /**
     * <code>required int64 size = 1;</code>
     */
    long getSize();

    // required int64 dateModified = 2;
    /**
     * <code>required int64 dateModified = 2;</code>
     */
    boolean hasDateModified();
    /**
     * <code>required int64 dateModified = 2;</code>
     */
    long getDateModified();

    // required string fileName = 3;
    /**
     * <code>required string fileName = 3;</code>
     */
    boolean hasFileName();
    /**
     * <code>required string fileName = 3;</code>
     */
    java.lang.String getFileName();
    /**
     * <code>required string fileName = 3;</code>
     */
    com.google.protobuf.ByteString
        getFileNameBytes();

    // required int32 version = 4;
    /**
     * <code>required int32 version = 4;</code>
     */
    boolean hasVersion();
    /**
     * <code>required int32 version = 4;</code>
     */
    int getVersion();

    // repeated .OsmAnd.OBF.AddressPart addressIndex = 8;
    /**
     * <code>repeated .OsmAnd.OBF.AddressPart addressIndex = 8;</code>
     */
    java.util.List<net.osmand.binary.OsmandIndex.AddressPart> 
        getAddressIndexList();
    /**
     * <code>repeated .OsmAnd.OBF.AddressPart addressIndex = 8;</code>
     */
    net.osmand.binary.OsmandIndex.AddressPart getAddressIndex(int index);
    /**
     * <code>repeated .OsmAnd.OBF.AddressPart addressIndex = 8;</code>
     */
    int getAddressIndexCount();

    // repeated .OsmAnd.OBF.TransportPart transportIndex = 9;
    /**
     * <code>repeated .OsmAnd.OBF.TransportPart transportIndex = 9;</code>
     */
    java.util.List<net.osmand.binary.OsmandIndex.TransportPart> 
        getTransportIndexList();
    /**
     * <code>repeated .OsmAnd.OBF.TransportPart transportIndex = 9;</code>
     */
    net.osmand.binary.OsmandIndex.TransportPart getTransportIndex(int index);
    /**
     * <code>repeated .OsmAnd.OBF.TransportPart transportIndex = 9;</code>
     */
    int getTransportIndexCount();

    // repeated .OsmAnd.OBF.PoiPart poiIndex = 10;
    /**
     * <code>repeated .OsmAnd.OBF.PoiPart poiIndex = 10;</code>
     */
    java.util.List<net.osmand.binary.OsmandIndex.PoiPart> 
        getPoiIndexList();
    /**
     * <code>repeated .OsmAnd.OBF.PoiPart poiIndex = 10;</code>
     */
    net.osmand.binary.OsmandIndex.PoiPart getPoiIndex(int index);
    /**
     * <code>repeated .OsmAnd.OBF.PoiPart poiIndex = 10;</code>
     */
    int getPoiIndexCount();

    // repeated .OsmAnd.OBF.MapPart mapIndex = 11;
    /**
     * <code>repeated .OsmAnd.OBF.MapPart mapIndex = 11;</code>
     */
    java.util.List<net.osmand.binary.OsmandIndex.MapPart> 
        getMapIndexList();
    /**
     * <code>repeated .OsmAnd.OBF.MapPart mapIndex = 11;</code>
     */
    net.osmand.binary.OsmandIndex.MapPart getMapIndex(int index);
    /**
     * <code>repeated .OsmAnd.OBF.MapPart mapIndex = 11;</code>
     */
    int getMapIndexCount();

    // repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;
    /**
     * <code>repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;</code>
     */
    java.util.List<net.osmand.binary.OsmandIndex.RoutingPart> 
        getRoutingIndexList();
    /**
     * <code>repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;</code>
     */
    net.osmand.binary.OsmandIndex.RoutingPart getRoutingIndex(int index);
    /**
     * <code>repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;</code>
     */
    int getRoutingIndexCount();

    // repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;
    /**
     * <code>repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;</code>
     */
    java.util.List<net.osmand.binary.OsmandIndex.HHRoutingPart> 
        getHhRoutingIndexList();
    /**
     * <code>repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;</code>
     */
    net.osmand.binary.OsmandIndex.HHRoutingPart getHhRoutingIndex(int index);
    /**
     * <code>repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;</code>
     */
    int getHhRoutingIndexCount();
  }
  /**
   * Protobuf type {@code OsmAnd.OBF.FileIndex}
   */
  public static final class FileIndex extends
      com.google.protobuf.GeneratedMessageLite
      implements FileIndexOrBuilder {
    // Use FileIndex.newBuilder() to construct.
    private FileIndex(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private FileIndex(boolean noInit) {}

    private static final FileIndex defaultInstance;
    public static FileIndex getDefaultInstance() {
      return defaultInstance;
    }

    public FileIndex getDefaultInstanceForType() {
      return defaultInstance;
    }

    private FileIndex(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              size_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              dateModified_ = input.readInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              fileName_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              version_ = input.readInt32();
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                addressIndex_ = new java.util.ArrayList<net.osmand.binary.OsmandIndex.AddressPart>();
                mutable_bitField0_ |= 0x00000010;
              }
              addressIndex_.add(input.readMessage(net.osmand.binary.OsmandIndex.AddressPart.PARSER, extensionRegistry));
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                transportIndex_ = new java.util.ArrayList<net.osmand.binary.OsmandIndex.TransportPart>();
                mutable_bitField0_ |= 0x00000020;
              }
              transportIndex_.add(input.readMessage(net.osmand.binary.OsmandIndex.TransportPart.PARSER, extensionRegistry));
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                poiIndex_ = new java.util.ArrayList<net.osmand.binary.OsmandIndex.PoiPart>();
                mutable_bitField0_ |= 0x00000040;
              }
              poiIndex_.add(input.readMessage(net.osmand.binary.OsmandIndex.PoiPart.PARSER, extensionRegistry));
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                mapIndex_ = new java.util.ArrayList<net.osmand.binary.OsmandIndex.MapPart>();
                mutable_bitField0_ |= 0x00000080;
              }
              mapIndex_.add(input.readMessage(net.osmand.binary.OsmandIndex.MapPart.PARSER, extensionRegistry));
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                routingIndex_ = new java.util.ArrayList<net.osmand.binary.OsmandIndex.RoutingPart>();
                mutable_bitField0_ |= 0x00000100;
              }
              routingIndex_.add(input.readMessage(net.osmand.binary.OsmandIndex.RoutingPart.PARSER, extensionRegistry));
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                hhRoutingIndex_ = new java.util.ArrayList<net.osmand.binary.OsmandIndex.HHRoutingPart>();
                mutable_bitField0_ |= 0x00000200;
              }
              hhRoutingIndex_.add(input.readMessage(net.osmand.binary.OsmandIndex.HHRoutingPart.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          addressIndex_ = java.util.Collections.unmodifiableList(addressIndex_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          transportIndex_ = java.util.Collections.unmodifiableList(transportIndex_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          poiIndex_ = java.util.Collections.unmodifiableList(poiIndex_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          mapIndex_ = java.util.Collections.unmodifiableList(mapIndex_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          routingIndex_ = java.util.Collections.unmodifiableList(routingIndex_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          hhRoutingIndex_ = java.util.Collections.unmodifiableList(hhRoutingIndex_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<FileIndex> PARSER =
        new com.google.protobuf.AbstractParser<FileIndex>() {
      public FileIndex parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FileIndex(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FileIndex> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 size = 1;
    public static final int SIZE_FIELD_NUMBER = 1;
    private long size_;
    /**
     * <code>required int64 size = 1;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 size = 1;</code>
     */
    public long getSize() {
      return size_;
    }

    // required int64 dateModified = 2;
    public static final int DATEMODIFIED_FIELD_NUMBER = 2;
    private long dateModified_;
    /**
     * <code>required int64 dateModified = 2;</code>
     */
    public boolean hasDateModified() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 dateModified = 2;</code>
     */
    public long getDateModified() {
      return dateModified_;
    }

    // required string fileName = 3;
    public static final int FILENAME_FIELD_NUMBER = 3;
    private java.lang.Object fileName_;
    /**
     * <code>required string fileName = 3;</code>
     */
    public boolean hasFileName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string fileName = 3;</code>
     */
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fileName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string fileName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 version = 4;
    public static final int VERSION_FIELD_NUMBER = 4;
    private int version_;
    /**
     * <code>required int32 version = 4;</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 version = 4;</code>
     */
    public int getVersion() {
      return version_;
    }

    // repeated .OsmAnd.OBF.AddressPart addressIndex = 8;
    public static final int ADDRESSINDEX_FIELD_NUMBER = 8;
    private java.util.List<net.osmand.binary.OsmandIndex.AddressPart> addressIndex_;
    /**
     * <code>repeated .OsmAnd.OBF.AddressPart addressIndex = 8;</code>
     */
    public java.util.List<net.osmand.binary.OsmandIndex.AddressPart> getAddressIndexList() {
      return addressIndex_;
    }
    /**
     * <code>repeated .OsmAnd.OBF.AddressPart addressIndex = 8;</code>
     */
    public java.util.List<? extends net.osmand.binary.OsmandIndex.AddressPartOrBuilder> 
        getAddressIndexOrBuilderList() {
      return addressIndex_;
    }
    /**
     * <code>repeated .OsmAnd.OBF.AddressPart addressIndex = 8;</code>
     */
    public int getAddressIndexCount() {
      return addressIndex_.size();
    }
    /**
     * <code>repeated .OsmAnd.OBF.AddressPart addressIndex = 8;</code>
     */
    public net.osmand.binary.OsmandIndex.AddressPart getAddressIndex(int index) {
      return addressIndex_.get(index);
    }
    /**
     * <code>repeated .OsmAnd.OBF.AddressPart addressIndex = 8;</code>
     */
    public net.osmand.binary.OsmandIndex.AddressPartOrBuilder getAddressIndexOrBuilder(
        int index) {
      return addressIndex_.get(index);
    }

    // repeated .OsmAnd.OBF.TransportPart transportIndex = 9;
    public static final int TRANSPORTINDEX_FIELD_NUMBER = 9;
    private java.util.List<net.osmand.binary.OsmandIndex.TransportPart> transportIndex_;
    /**
     * <code>repeated .OsmAnd.OBF.TransportPart transportIndex = 9;</code>
     */
    public java.util.List<net.osmand.binary.OsmandIndex.TransportPart> getTransportIndexList() {
      return transportIndex_;
    }
    /**
     * <code>repeated .OsmAnd.OBF.TransportPart transportIndex = 9;</code>
     */
    public java.util.List<? extends net.osmand.binary.OsmandIndex.TransportPartOrBuilder> 
        getTransportIndexOrBuilderList() {
      return transportIndex_;
    }
    /**
     * <code>repeated .OsmAnd.OBF.TransportPart transportIndex = 9;</code>
     */
    public int getTransportIndexCount() {
      return transportIndex_.size();
    }
    /**
     * <code>repeated .OsmAnd.OBF.TransportPart transportIndex = 9;</code>
     */
    public net.osmand.binary.OsmandIndex.TransportPart getTransportIndex(int index) {
      return transportIndex_.get(index);
    }
    /**
     * <code>repeated .OsmAnd.OBF.TransportPart transportIndex = 9;</code>
     */
    public net.osmand.binary.OsmandIndex.TransportPartOrBuilder getTransportIndexOrBuilder(
        int index) {
      return transportIndex_.get(index);
    }

    // repeated .OsmAnd.OBF.PoiPart poiIndex = 10;
    public static final int POIINDEX_FIELD_NUMBER = 10;
    private java.util.List<net.osmand.binary.OsmandIndex.PoiPart> poiIndex_;
    /**
     * <code>repeated .OsmAnd.OBF.PoiPart poiIndex = 10;</code>
     */
    public java.util.List<net.osmand.binary.OsmandIndex.PoiPart> getPoiIndexList() {
      return poiIndex_;
    }
    /**
     * <code>repeated .OsmAnd.OBF.PoiPart poiIndex = 10;</code>
     */
    public java.util.List<? extends net.osmand.binary.OsmandIndex.PoiPartOrBuilder> 
        getPoiIndexOrBuilderList() {
      return poiIndex_;
    }
    /**
     * <code>repeated .OsmAnd.OBF.PoiPart poiIndex = 10;</code>
     */
    public int getPoiIndexCount() {
      return poiIndex_.size();
    }
    /**
     * <code>repeated .OsmAnd.OBF.PoiPart poiIndex = 10;</code>
     */
    public net.osmand.binary.OsmandIndex.PoiPart getPoiIndex(int index) {
      return poiIndex_.get(index);
    }
    /**
     * <code>repeated .OsmAnd.OBF.PoiPart poiIndex = 10;</code>
     */
    public net.osmand.binary.OsmandIndex.PoiPartOrBuilder getPoiIndexOrBuilder(
        int index) {
      return poiIndex_.get(index);
    }

    // repeated .OsmAnd.OBF.MapPart mapIndex = 11;
    public static final int MAPINDEX_FIELD_NUMBER = 11;
    private java.util.List<net.osmand.binary.OsmandIndex.MapPart> mapIndex_;
    /**
     * <code>repeated .OsmAnd.OBF.MapPart mapIndex = 11;</code>
     */
    public java.util.List<net.osmand.binary.OsmandIndex.MapPart> getMapIndexList() {
      return mapIndex_;
    }
    /**
     * <code>repeated .OsmAnd.OBF.MapPart mapIndex = 11;</code>
     */
    public java.util.List<? extends net.osmand.binary.OsmandIndex.MapPartOrBuilder> 
        getMapIndexOrBuilderList() {
      return mapIndex_;
    }
    /**
     * <code>repeated .OsmAnd.OBF.MapPart mapIndex = 11;</code>
     */
    public int getMapIndexCount() {
      return mapIndex_.size();
    }
    /**
     * <code>repeated .OsmAnd.OBF.MapPart mapIndex = 11;</code>
     */
    public net.osmand.binary.OsmandIndex.MapPart getMapIndex(int index) {
      return mapIndex_.get(index);
    }
    /**
     * <code>repeated .OsmAnd.OBF.MapPart mapIndex = 11;</code>
     */
    public net.osmand.binary.OsmandIndex.MapPartOrBuilder getMapIndexOrBuilder(
        int index) {
      return mapIndex_.get(index);
    }

    // repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;
    public static final int ROUTINGINDEX_FIELD_NUMBER = 12;
    private java.util.List<net.osmand.binary.OsmandIndex.RoutingPart> routingIndex_;
    /**
     * <code>repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;</code>
     */
    public java.util.List<net.osmand.binary.OsmandIndex.RoutingPart> getRoutingIndexList() {
      return routingIndex_;
    }
    /**
     * <code>repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;</code>
     */
    public java.util.List<? extends net.osmand.binary.OsmandIndex.RoutingPartOrBuilder> 
        getRoutingIndexOrBuilderList() {
      return routingIndex_;
    }
    /**
     * <code>repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;</code>
     */
    public int getRoutingIndexCount() {
      return routingIndex_.size();
    }
    /**
     * <code>repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;</code>
     */
    public net.osmand.binary.OsmandIndex.RoutingPart getRoutingIndex(int index) {
      return routingIndex_.get(index);
    }
    /**
     * <code>repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;</code>
     */
    public net.osmand.binary.OsmandIndex.RoutingPartOrBuilder getRoutingIndexOrBuilder(
        int index) {
      return routingIndex_.get(index);
    }

    // repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;
    public static final int HHROUTINGINDEX_FIELD_NUMBER = 13;
    private java.util.List<net.osmand.binary.OsmandIndex.HHRoutingPart> hhRoutingIndex_;
    /**
     * <code>repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;</code>
     */
    public java.util.List<net.osmand.binary.OsmandIndex.HHRoutingPart> getHhRoutingIndexList() {
      return hhRoutingIndex_;
    }
    /**
     * <code>repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;</code>
     */
    public java.util.List<? extends net.osmand.binary.OsmandIndex.HHRoutingPartOrBuilder> 
        getHhRoutingIndexOrBuilderList() {
      return hhRoutingIndex_;
    }
    /**
     * <code>repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;</code>
     */
    public int getHhRoutingIndexCount() {
      return hhRoutingIndex_.size();
    }
    /**
     * <code>repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;</code>
     */
    public net.osmand.binary.OsmandIndex.HHRoutingPart getHhRoutingIndex(int index) {
      return hhRoutingIndex_.get(index);
    }
    /**
     * <code>repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;</code>
     */
    public net.osmand.binary.OsmandIndex.HHRoutingPartOrBuilder getHhRoutingIndexOrBuilder(
        int index) {
      return hhRoutingIndex_.get(index);
    }

    private void initFields() {
      size_ = 0L;
      dateModified_ = 0L;
      fileName_ = "";
      version_ = 0;
      addressIndex_ = java.util.Collections.emptyList();
      transportIndex_ = java.util.Collections.emptyList();
      poiIndex_ = java.util.Collections.emptyList();
      mapIndex_ = java.util.Collections.emptyList();
      routingIndex_ = java.util.Collections.emptyList();
      hhRoutingIndex_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDateModified()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFileName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getAddressIndexCount(); i++) {
        if (!getAddressIndex(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getTransportIndexCount(); i++) {
        if (!getTransportIndex(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getPoiIndexCount(); i++) {
        if (!getPoiIndex(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getMapIndexCount(); i++) {
        if (!getMapIndex(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getRoutingIndexCount(); i++) {
        if (!getRoutingIndex(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getHhRoutingIndexCount(); i++) {
        if (!getHhRoutingIndex(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, dateModified_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getFileNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, version_);
      }
      for (int i = 0; i < addressIndex_.size(); i++) {
        output.writeMessage(8, addressIndex_.get(i));
      }
      for (int i = 0; i < transportIndex_.size(); i++) {
        output.writeMessage(9, transportIndex_.get(i));
      }
      for (int i = 0; i < poiIndex_.size(); i++) {
        output.writeMessage(10, poiIndex_.get(i));
      }
      for (int i = 0; i < mapIndex_.size(); i++) {
        output.writeMessage(11, mapIndex_.get(i));
      }
      for (int i = 0; i < routingIndex_.size(); i++) {
        output.writeMessage(12, routingIndex_.get(i));
      }
      for (int i = 0; i < hhRoutingIndex_.size(); i++) {
        output.writeMessage(13, hhRoutingIndex_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, dateModified_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getFileNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, version_);
      }
      for (int i = 0; i < addressIndex_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, addressIndex_.get(i));
      }
      for (int i = 0; i < transportIndex_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, transportIndex_.get(i));
      }
      for (int i = 0; i < poiIndex_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, poiIndex_.get(i));
      }
      for (int i = 0; i < mapIndex_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, mapIndex_.get(i));
      }
      for (int i = 0; i < routingIndex_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, routingIndex_.get(i));
      }
      for (int i = 0; i < hhRoutingIndex_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, hhRoutingIndex_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.osmand.binary.OsmandIndex.FileIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.FileIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.FileIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.FileIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.FileIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.FileIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.FileIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.FileIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.FileIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.FileIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandIndex.FileIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code OsmAnd.OBF.FileIndex}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          net.osmand.binary.OsmandIndex.FileIndex, Builder>
        implements net.osmand.binary.OsmandIndex.FileIndexOrBuilder {
      // Construct using net.osmand.binary.OsmandIndex.FileIndex.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        size_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        dateModified_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        fileName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        addressIndex_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        transportIndex_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        poiIndex_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        mapIndex_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        routingIndex_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        hhRoutingIndex_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public net.osmand.binary.OsmandIndex.FileIndex getDefaultInstanceForType() {
        return net.osmand.binary.OsmandIndex.FileIndex.getDefaultInstance();
      }

      public net.osmand.binary.OsmandIndex.FileIndex build() {
        net.osmand.binary.OsmandIndex.FileIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.osmand.binary.OsmandIndex.FileIndex buildPartial() {
        net.osmand.binary.OsmandIndex.FileIndex result = new net.osmand.binary.OsmandIndex.FileIndex(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dateModified_ = dateModified_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fileName_ = fileName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.version_ = version_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          addressIndex_ = java.util.Collections.unmodifiableList(addressIndex_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.addressIndex_ = addressIndex_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          transportIndex_ = java.util.Collections.unmodifiableList(transportIndex_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.transportIndex_ = transportIndex_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          poiIndex_ = java.util.Collections.unmodifiableList(poiIndex_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.poiIndex_ = poiIndex_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          mapIndex_ = java.util.Collections.unmodifiableList(mapIndex_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.mapIndex_ = mapIndex_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          routingIndex_ = java.util.Collections.unmodifiableList(routingIndex_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.routingIndex_ = routingIndex_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          hhRoutingIndex_ = java.util.Collections.unmodifiableList(hhRoutingIndex_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.hhRoutingIndex_ = hhRoutingIndex_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(net.osmand.binary.OsmandIndex.FileIndex other) {
        if (other == net.osmand.binary.OsmandIndex.FileIndex.getDefaultInstance()) return this;
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasDateModified()) {
          setDateModified(other.getDateModified());
        }
        if (other.hasFileName()) {
          bitField0_ |= 0x00000004;
          fileName_ = other.fileName_;
          
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (!other.addressIndex_.isEmpty()) {
          if (addressIndex_.isEmpty()) {
            addressIndex_ = other.addressIndex_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureAddressIndexIsMutable();
            addressIndex_.addAll(other.addressIndex_);
          }
          
        }
        if (!other.transportIndex_.isEmpty()) {
          if (transportIndex_.isEmpty()) {
            transportIndex_ = other.transportIndex_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureTransportIndexIsMutable();
            transportIndex_.addAll(other.transportIndex_);
          }
          
        }
        if (!other.poiIndex_.isEmpty()) {
          if (poiIndex_.isEmpty()) {
            poiIndex_ = other.poiIndex_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensurePoiIndexIsMutable();
            poiIndex_.addAll(other.poiIndex_);
          }
          
        }
        if (!other.mapIndex_.isEmpty()) {
          if (mapIndex_.isEmpty()) {
            mapIndex_ = other.mapIndex_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureMapIndexIsMutable();
            mapIndex_.addAll(other.mapIndex_);
          }
          
        }
        if (!other.routingIndex_.isEmpty()) {
          if (routingIndex_.isEmpty()) {
            routingIndex_ = other.routingIndex_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureRoutingIndexIsMutable();
            routingIndex_.addAll(other.routingIndex_);
          }
          
        }
        if (!other.hhRoutingIndex_.isEmpty()) {
          if (hhRoutingIndex_.isEmpty()) {
            hhRoutingIndex_ = other.hhRoutingIndex_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureHhRoutingIndexIsMutable();
            hhRoutingIndex_.addAll(other.hhRoutingIndex_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSize()) {
          
          return false;
        }
        if (!hasDateModified()) {
          
          return false;
        }
        if (!hasFileName()) {
          
          return false;
        }
        if (!hasVersion()) {
          
          return false;
        }
        for (int i = 0; i < getAddressIndexCount(); i++) {
          if (!getAddressIndex(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getTransportIndexCount(); i++) {
          if (!getTransportIndex(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getPoiIndexCount(); i++) {
          if (!getPoiIndex(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getMapIndexCount(); i++) {
          if (!getMapIndex(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getRoutingIndexCount(); i++) {
          if (!getRoutingIndex(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getHhRoutingIndexCount(); i++) {
          if (!getHhRoutingIndex(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.osmand.binary.OsmandIndex.FileIndex parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.osmand.binary.OsmandIndex.FileIndex) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 size = 1;
      private long size_ ;
      /**
       * <code>required int64 size = 1;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public long getSize() {
        return size_;
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public Builder setSize(long value) {
        bitField0_ |= 0x00000001;
        size_ = value;
        
        return this;
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0L;
        
        return this;
      }

      // required int64 dateModified = 2;
      private long dateModified_ ;
      /**
       * <code>required int64 dateModified = 2;</code>
       */
      public boolean hasDateModified() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 dateModified = 2;</code>
       */
      public long getDateModified() {
        return dateModified_;
      }
      /**
       * <code>required int64 dateModified = 2;</code>
       */
      public Builder setDateModified(long value) {
        bitField0_ |= 0x00000002;
        dateModified_ = value;
        
        return this;
      }
      /**
       * <code>required int64 dateModified = 2;</code>
       */
      public Builder clearDateModified() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dateModified_ = 0L;
        
        return this;
      }

      // required string fileName = 3;
      private java.lang.Object fileName_ = "";
      /**
       * <code>required string fileName = 3;</code>
       */
      public boolean hasFileName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string fileName = 3;</code>
       */
      public java.lang.String getFileName() {
        java.lang.Object ref = fileName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          fileName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string fileName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        java.lang.Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string fileName = 3;</code>
       */
      public Builder setFileName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        fileName_ = value;
        
        return this;
      }
      /**
       * <code>required string fileName = 3;</code>
       */
      public Builder clearFileName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fileName_ = getDefaultInstance().getFileName();
        
        return this;
      }
      /**
       * <code>required string fileName = 3;</code>
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        fileName_ = value;
        
        return this;
      }

      // required int32 version = 4;
      private int version_ ;
      /**
       * <code>required int32 version = 4;</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 version = 4;</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>required int32 version = 4;</code>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000008;
        version_ = value;
        
        return this;
      }
      /**
       * <code>required int32 version = 4;</code>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000008);
        version_ = 0;
        
        return this;
      }

      // repeated .OsmAnd.OBF.AddressPart addressIndex = 8;
      private java.util.List<net.osmand.binary.OsmandIndex.AddressPart> addressIndex_ =
        java.util.Collections.emptyList();
      private void ensureAddressIndexIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          addressIndex_ = new java.util.ArrayList<net.osmand.binary.OsmandIndex.AddressPart>(addressIndex_);
          bitField0_ |= 0x00000010;
         }
      }

      /**
       * <code>repeated .OsmAnd.OBF.AddressPart addressIndex = 8;</code>
       */
      public java.util.List<net.osmand.binary.OsmandIndex.AddressPart> getAddressIndexList() {
        return java.util.Collections.unmodifiableList(addressIndex_);
      }
      /**
       * <code>repeated .OsmAnd.OBF.AddressPart addressIndex = 8;</code>
       */
      public int getAddressIndexCount() {
        return addressIndex_.size();
      }
      /**
       * <code>repeated .OsmAnd.OBF.AddressPart addressIndex = 8;</code>
       */
      public net.osmand.binary.OsmandIndex.AddressPart getAddressIndex(int index) {
        return addressIndex_.get(index);
      }
      /**
       * <code>repeated .OsmAnd.OBF.AddressPart addressIndex = 8;</code>
       */
      public Builder setAddressIndex(
          int index, net.osmand.binary.OsmandIndex.AddressPart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAddressIndexIsMutable();
        addressIndex_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.AddressPart addressIndex = 8;</code>
       */
      public Builder setAddressIndex(
          int index, net.osmand.binary.OsmandIndex.AddressPart.Builder builderForValue) {
        ensureAddressIndexIsMutable();
        addressIndex_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.AddressPart addressIndex = 8;</code>
       */
      public Builder addAddressIndex(net.osmand.binary.OsmandIndex.AddressPart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAddressIndexIsMutable();
        addressIndex_.add(value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.AddressPart addressIndex = 8;</code>
       */
      public Builder addAddressIndex(
          int index, net.osmand.binary.OsmandIndex.AddressPart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAddressIndexIsMutable();
        addressIndex_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.AddressPart addressIndex = 8;</code>
       */
      public Builder addAddressIndex(
          net.osmand.binary.OsmandIndex.AddressPart.Builder builderForValue) {
        ensureAddressIndexIsMutable();
        addressIndex_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.AddressPart addressIndex = 8;</code>
       */
      public Builder addAddressIndex(
          int index, net.osmand.binary.OsmandIndex.AddressPart.Builder builderForValue) {
        ensureAddressIndexIsMutable();
        addressIndex_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.AddressPart addressIndex = 8;</code>
       */
      public Builder addAllAddressIndex(
          java.lang.Iterable<? extends net.osmand.binary.OsmandIndex.AddressPart> values) {
        ensureAddressIndexIsMutable();
        super.addAll(values, addressIndex_);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.AddressPart addressIndex = 8;</code>
       */
      public Builder clearAddressIndex() {
        addressIndex_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.AddressPart addressIndex = 8;</code>
       */
      public Builder removeAddressIndex(int index) {
        ensureAddressIndexIsMutable();
        addressIndex_.remove(index);

        return this;
      }

      // repeated .OsmAnd.OBF.TransportPart transportIndex = 9;
      private java.util.List<net.osmand.binary.OsmandIndex.TransportPart> transportIndex_ =
        java.util.Collections.emptyList();
      private void ensureTransportIndexIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          transportIndex_ = new java.util.ArrayList<net.osmand.binary.OsmandIndex.TransportPart>(transportIndex_);
          bitField0_ |= 0x00000020;
         }
      }

      /**
       * <code>repeated .OsmAnd.OBF.TransportPart transportIndex = 9;</code>
       */
      public java.util.List<net.osmand.binary.OsmandIndex.TransportPart> getTransportIndexList() {
        return java.util.Collections.unmodifiableList(transportIndex_);
      }
      /**
       * <code>repeated .OsmAnd.OBF.TransportPart transportIndex = 9;</code>
       */
      public int getTransportIndexCount() {
        return transportIndex_.size();
      }
      /**
       * <code>repeated .OsmAnd.OBF.TransportPart transportIndex = 9;</code>
       */
      public net.osmand.binary.OsmandIndex.TransportPart getTransportIndex(int index) {
        return transportIndex_.get(index);
      }
      /**
       * <code>repeated .OsmAnd.OBF.TransportPart transportIndex = 9;</code>
       */
      public Builder setTransportIndex(
          int index, net.osmand.binary.OsmandIndex.TransportPart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransportIndexIsMutable();
        transportIndex_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.TransportPart transportIndex = 9;</code>
       */
      public Builder setTransportIndex(
          int index, net.osmand.binary.OsmandIndex.TransportPart.Builder builderForValue) {
        ensureTransportIndexIsMutable();
        transportIndex_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.TransportPart transportIndex = 9;</code>
       */
      public Builder addTransportIndex(net.osmand.binary.OsmandIndex.TransportPart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransportIndexIsMutable();
        transportIndex_.add(value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.TransportPart transportIndex = 9;</code>
       */
      public Builder addTransportIndex(
          int index, net.osmand.binary.OsmandIndex.TransportPart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransportIndexIsMutable();
        transportIndex_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.TransportPart transportIndex = 9;</code>
       */
      public Builder addTransportIndex(
          net.osmand.binary.OsmandIndex.TransportPart.Builder builderForValue) {
        ensureTransportIndexIsMutable();
        transportIndex_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.TransportPart transportIndex = 9;</code>
       */
      public Builder addTransportIndex(
          int index, net.osmand.binary.OsmandIndex.TransportPart.Builder builderForValue) {
        ensureTransportIndexIsMutable();
        transportIndex_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.TransportPart transportIndex = 9;</code>
       */
      public Builder addAllTransportIndex(
          java.lang.Iterable<? extends net.osmand.binary.OsmandIndex.TransportPart> values) {
        ensureTransportIndexIsMutable();
        super.addAll(values, transportIndex_);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.TransportPart transportIndex = 9;</code>
       */
      public Builder clearTransportIndex() {
        transportIndex_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.TransportPart transportIndex = 9;</code>
       */
      public Builder removeTransportIndex(int index) {
        ensureTransportIndexIsMutable();
        transportIndex_.remove(index);

        return this;
      }

      // repeated .OsmAnd.OBF.PoiPart poiIndex = 10;
      private java.util.List<net.osmand.binary.OsmandIndex.PoiPart> poiIndex_ =
        java.util.Collections.emptyList();
      private void ensurePoiIndexIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          poiIndex_ = new java.util.ArrayList<net.osmand.binary.OsmandIndex.PoiPart>(poiIndex_);
          bitField0_ |= 0x00000040;
         }
      }

      /**
       * <code>repeated .OsmAnd.OBF.PoiPart poiIndex = 10;</code>
       */
      public java.util.List<net.osmand.binary.OsmandIndex.PoiPart> getPoiIndexList() {
        return java.util.Collections.unmodifiableList(poiIndex_);
      }
      /**
       * <code>repeated .OsmAnd.OBF.PoiPart poiIndex = 10;</code>
       */
      public int getPoiIndexCount() {
        return poiIndex_.size();
      }
      /**
       * <code>repeated .OsmAnd.OBF.PoiPart poiIndex = 10;</code>
       */
      public net.osmand.binary.OsmandIndex.PoiPart getPoiIndex(int index) {
        return poiIndex_.get(index);
      }
      /**
       * <code>repeated .OsmAnd.OBF.PoiPart poiIndex = 10;</code>
       */
      public Builder setPoiIndex(
          int index, net.osmand.binary.OsmandIndex.PoiPart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePoiIndexIsMutable();
        poiIndex_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.PoiPart poiIndex = 10;</code>
       */
      public Builder setPoiIndex(
          int index, net.osmand.binary.OsmandIndex.PoiPart.Builder builderForValue) {
        ensurePoiIndexIsMutable();
        poiIndex_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.PoiPart poiIndex = 10;</code>
       */
      public Builder addPoiIndex(net.osmand.binary.OsmandIndex.PoiPart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePoiIndexIsMutable();
        poiIndex_.add(value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.PoiPart poiIndex = 10;</code>
       */
      public Builder addPoiIndex(
          int index, net.osmand.binary.OsmandIndex.PoiPart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePoiIndexIsMutable();
        poiIndex_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.PoiPart poiIndex = 10;</code>
       */
      public Builder addPoiIndex(
          net.osmand.binary.OsmandIndex.PoiPart.Builder builderForValue) {
        ensurePoiIndexIsMutable();
        poiIndex_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.PoiPart poiIndex = 10;</code>
       */
      public Builder addPoiIndex(
          int index, net.osmand.binary.OsmandIndex.PoiPart.Builder builderForValue) {
        ensurePoiIndexIsMutable();
        poiIndex_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.PoiPart poiIndex = 10;</code>
       */
      public Builder addAllPoiIndex(
          java.lang.Iterable<? extends net.osmand.binary.OsmandIndex.PoiPart> values) {
        ensurePoiIndexIsMutable();
        super.addAll(values, poiIndex_);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.PoiPart poiIndex = 10;</code>
       */
      public Builder clearPoiIndex() {
        poiIndex_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.PoiPart poiIndex = 10;</code>
       */
      public Builder removePoiIndex(int index) {
        ensurePoiIndexIsMutable();
        poiIndex_.remove(index);

        return this;
      }

      // repeated .OsmAnd.OBF.MapPart mapIndex = 11;
      private java.util.List<net.osmand.binary.OsmandIndex.MapPart> mapIndex_ =
        java.util.Collections.emptyList();
      private void ensureMapIndexIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          mapIndex_ = new java.util.ArrayList<net.osmand.binary.OsmandIndex.MapPart>(mapIndex_);
          bitField0_ |= 0x00000080;
         }
      }

      /**
       * <code>repeated .OsmAnd.OBF.MapPart mapIndex = 11;</code>
       */
      public java.util.List<net.osmand.binary.OsmandIndex.MapPart> getMapIndexList() {
        return java.util.Collections.unmodifiableList(mapIndex_);
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapPart mapIndex = 11;</code>
       */
      public int getMapIndexCount() {
        return mapIndex_.size();
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapPart mapIndex = 11;</code>
       */
      public net.osmand.binary.OsmandIndex.MapPart getMapIndex(int index) {
        return mapIndex_.get(index);
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapPart mapIndex = 11;</code>
       */
      public Builder setMapIndex(
          int index, net.osmand.binary.OsmandIndex.MapPart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMapIndexIsMutable();
        mapIndex_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapPart mapIndex = 11;</code>
       */
      public Builder setMapIndex(
          int index, net.osmand.binary.OsmandIndex.MapPart.Builder builderForValue) {
        ensureMapIndexIsMutable();
        mapIndex_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapPart mapIndex = 11;</code>
       */
      public Builder addMapIndex(net.osmand.binary.OsmandIndex.MapPart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMapIndexIsMutable();
        mapIndex_.add(value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapPart mapIndex = 11;</code>
       */
      public Builder addMapIndex(
          int index, net.osmand.binary.OsmandIndex.MapPart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMapIndexIsMutable();
        mapIndex_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapPart mapIndex = 11;</code>
       */
      public Builder addMapIndex(
          net.osmand.binary.OsmandIndex.MapPart.Builder builderForValue) {
        ensureMapIndexIsMutable();
        mapIndex_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapPart mapIndex = 11;</code>
       */
      public Builder addMapIndex(
          int index, net.osmand.binary.OsmandIndex.MapPart.Builder builderForValue) {
        ensureMapIndexIsMutable();
        mapIndex_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapPart mapIndex = 11;</code>
       */
      public Builder addAllMapIndex(
          java.lang.Iterable<? extends net.osmand.binary.OsmandIndex.MapPart> values) {
        ensureMapIndexIsMutable();
        super.addAll(values, mapIndex_);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapPart mapIndex = 11;</code>
       */
      public Builder clearMapIndex() {
        mapIndex_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapPart mapIndex = 11;</code>
       */
      public Builder removeMapIndex(int index) {
        ensureMapIndexIsMutable();
        mapIndex_.remove(index);

        return this;
      }

      // repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;
      private java.util.List<net.osmand.binary.OsmandIndex.RoutingPart> routingIndex_ =
        java.util.Collections.emptyList();
      private void ensureRoutingIndexIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          routingIndex_ = new java.util.ArrayList<net.osmand.binary.OsmandIndex.RoutingPart>(routingIndex_);
          bitField0_ |= 0x00000100;
         }
      }

      /**
       * <code>repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;</code>
       */
      public java.util.List<net.osmand.binary.OsmandIndex.RoutingPart> getRoutingIndexList() {
        return java.util.Collections.unmodifiableList(routingIndex_);
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;</code>
       */
      public int getRoutingIndexCount() {
        return routingIndex_.size();
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;</code>
       */
      public net.osmand.binary.OsmandIndex.RoutingPart getRoutingIndex(int index) {
        return routingIndex_.get(index);
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;</code>
       */
      public Builder setRoutingIndex(
          int index, net.osmand.binary.OsmandIndex.RoutingPart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoutingIndexIsMutable();
        routingIndex_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;</code>
       */
      public Builder setRoutingIndex(
          int index, net.osmand.binary.OsmandIndex.RoutingPart.Builder builderForValue) {
        ensureRoutingIndexIsMutable();
        routingIndex_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;</code>
       */
      public Builder addRoutingIndex(net.osmand.binary.OsmandIndex.RoutingPart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoutingIndexIsMutable();
        routingIndex_.add(value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;</code>
       */
      public Builder addRoutingIndex(
          int index, net.osmand.binary.OsmandIndex.RoutingPart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoutingIndexIsMutable();
        routingIndex_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;</code>
       */
      public Builder addRoutingIndex(
          net.osmand.binary.OsmandIndex.RoutingPart.Builder builderForValue) {
        ensureRoutingIndexIsMutable();
        routingIndex_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;</code>
       */
      public Builder addRoutingIndex(
          int index, net.osmand.binary.OsmandIndex.RoutingPart.Builder builderForValue) {
        ensureRoutingIndexIsMutable();
        routingIndex_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;</code>
       */
      public Builder addAllRoutingIndex(
          java.lang.Iterable<? extends net.osmand.binary.OsmandIndex.RoutingPart> values) {
        ensureRoutingIndexIsMutable();
        super.addAll(values, routingIndex_);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;</code>
       */
      public Builder clearRoutingIndex() {
        routingIndex_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingPart routingIndex = 12;</code>
       */
      public Builder removeRoutingIndex(int index) {
        ensureRoutingIndexIsMutable();
        routingIndex_.remove(index);

        return this;
      }

      // repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;
      private java.util.List<net.osmand.binary.OsmandIndex.HHRoutingPart> hhRoutingIndex_ =
        java.util.Collections.emptyList();
      private void ensureHhRoutingIndexIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          hhRoutingIndex_ = new java.util.ArrayList<net.osmand.binary.OsmandIndex.HHRoutingPart>(hhRoutingIndex_);
          bitField0_ |= 0x00000200;
         }
      }

      /**
       * <code>repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;</code>
       */
      public java.util.List<net.osmand.binary.OsmandIndex.HHRoutingPart> getHhRoutingIndexList() {
        return java.util.Collections.unmodifiableList(hhRoutingIndex_);
      }
      /**
       * <code>repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;</code>
       */
      public int getHhRoutingIndexCount() {
        return hhRoutingIndex_.size();
      }
      /**
       * <code>repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;</code>
       */
      public net.osmand.binary.OsmandIndex.HHRoutingPart getHhRoutingIndex(int index) {
        return hhRoutingIndex_.get(index);
      }
      /**
       * <code>repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;</code>
       */
      public Builder setHhRoutingIndex(
          int index, net.osmand.binary.OsmandIndex.HHRoutingPart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHhRoutingIndexIsMutable();
        hhRoutingIndex_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;</code>
       */
      public Builder setHhRoutingIndex(
          int index, net.osmand.binary.OsmandIndex.HHRoutingPart.Builder builderForValue) {
        ensureHhRoutingIndexIsMutable();
        hhRoutingIndex_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;</code>
       */
      public Builder addHhRoutingIndex(net.osmand.binary.OsmandIndex.HHRoutingPart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHhRoutingIndexIsMutable();
        hhRoutingIndex_.add(value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;</code>
       */
      public Builder addHhRoutingIndex(
          int index, net.osmand.binary.OsmandIndex.HHRoutingPart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHhRoutingIndexIsMutable();
        hhRoutingIndex_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;</code>
       */
      public Builder addHhRoutingIndex(
          net.osmand.binary.OsmandIndex.HHRoutingPart.Builder builderForValue) {
        ensureHhRoutingIndexIsMutable();
        hhRoutingIndex_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;</code>
       */
      public Builder addHhRoutingIndex(
          int index, net.osmand.binary.OsmandIndex.HHRoutingPart.Builder builderForValue) {
        ensureHhRoutingIndexIsMutable();
        hhRoutingIndex_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;</code>
       */
      public Builder addAllHhRoutingIndex(
          java.lang.Iterable<? extends net.osmand.binary.OsmandIndex.HHRoutingPart> values) {
        ensureHhRoutingIndexIsMutable();
        super.addAll(values, hhRoutingIndex_);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;</code>
       */
      public Builder clearHhRoutingIndex() {
        hhRoutingIndex_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.HHRoutingPart hhRoutingIndex = 13;</code>
       */
      public Builder removeHhRoutingIndex(int index) {
        ensureHhRoutingIndexIsMutable();
        hhRoutingIndex_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.FileIndex)
    }

    static {
      defaultInstance = new FileIndex(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.FileIndex)
  }

  public interface AddressPartOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int64 size = 1;
    /**
     * <code>required int64 size = 1;</code>
     */
    boolean hasSize();
    /**
     * <code>required int64 size = 1;</code>
     */
    long getSize();

    // required int64 offset = 2;
    /**
     * <code>required int64 offset = 2;</code>
     */
    boolean hasOffset();
    /**
     * <code>required int64 offset = 2;</code>
     */
    long getOffset();

    // optional string name = 3;
    /**
     * <code>optional string name = 3;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional string nameEn = 4;
    /**
     * <code>optional string nameEn = 4;</code>
     */
    boolean hasNameEn();
    /**
     * <code>optional string nameEn = 4;</code>
     */
    java.lang.String getNameEn();
    /**
     * <code>optional string nameEn = 4;</code>
     */
    com.google.protobuf.ByteString
        getNameEnBytes();

    // optional int32 indexNameOffset = 5;
    /**
     * <code>optional int32 indexNameOffset = 5;</code>
     */
    boolean hasIndexNameOffset();
    /**
     * <code>optional int32 indexNameOffset = 5;</code>
     */
    int getIndexNameOffset();

    // repeated .OsmAnd.OBF.CityBlock cities = 8;
    /**
     * <code>repeated .OsmAnd.OBF.CityBlock cities = 8;</code>
     */
    java.util.List<net.osmand.binary.OsmandIndex.CityBlock> 
        getCitiesList();
    /**
     * <code>repeated .OsmAnd.OBF.CityBlock cities = 8;</code>
     */
    net.osmand.binary.OsmandIndex.CityBlock getCities(int index);
    /**
     * <code>repeated .OsmAnd.OBF.CityBlock cities = 8;</code>
     */
    int getCitiesCount();

    // repeated string additionalTags = 9;
    /**
     * <code>repeated string additionalTags = 9;</code>
     */
    java.util.List<java.lang.String>
    getAdditionalTagsList();
    /**
     * <code>repeated string additionalTags = 9;</code>
     */
    int getAdditionalTagsCount();
    /**
     * <code>repeated string additionalTags = 9;</code>
     */
    java.lang.String getAdditionalTags(int index);
    /**
     * <code>repeated string additionalTags = 9;</code>
     */
    com.google.protobuf.ByteString
        getAdditionalTagsBytes(int index);
  }
  /**
   * Protobuf type {@code OsmAnd.OBF.AddressPart}
   */
  public static final class AddressPart extends
      com.google.protobuf.GeneratedMessageLite
      implements AddressPartOrBuilder {
    // Use AddressPart.newBuilder() to construct.
    private AddressPart(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private AddressPart(boolean noInit) {}

    private static final AddressPart defaultInstance;
    public static AddressPart getDefaultInstance() {
      return defaultInstance;
    }

    public AddressPart getDefaultInstanceForType() {
      return defaultInstance;
    }

    private AddressPart(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              size_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              offset_ = input.readInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              name_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              nameEn_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              indexNameOffset_ = input.readInt32();
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                cities_ = new java.util.ArrayList<net.osmand.binary.OsmandIndex.CityBlock>();
                mutable_bitField0_ |= 0x00000020;
              }
              cities_.add(input.readMessage(net.osmand.binary.OsmandIndex.CityBlock.PARSER, extensionRegistry));
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                additionalTags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000040;
              }
              additionalTags_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          cities_ = java.util.Collections.unmodifiableList(cities_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          additionalTags_ = new com.google.protobuf.UnmodifiableLazyStringList(additionalTags_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<AddressPart> PARSER =
        new com.google.protobuf.AbstractParser<AddressPart>() {
      public AddressPart parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AddressPart(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AddressPart> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 size = 1;
    public static final int SIZE_FIELD_NUMBER = 1;
    private long size_;
    /**
     * <code>required int64 size = 1;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 size = 1;</code>
     */
    public long getSize() {
      return size_;
    }

    // required int64 offset = 2;
    public static final int OFFSET_FIELD_NUMBER = 2;
    private long offset_;
    /**
     * <code>required int64 offset = 2;</code>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 offset = 2;</code>
     */
    public long getOffset() {
      return offset_;
    }

    // optional string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 3;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string nameEn = 4;
    public static final int NAMEEN_FIELD_NUMBER = 4;
    private java.lang.Object nameEn_;
    /**
     * <code>optional string nameEn = 4;</code>
     */
    public boolean hasNameEn() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string nameEn = 4;</code>
     */
    public java.lang.String getNameEn() {
      java.lang.Object ref = nameEn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nameEn_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string nameEn = 4;</code>
     */
    public com.google.protobuf.ByteString
        getNameEnBytes() {
      java.lang.Object ref = nameEn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nameEn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 indexNameOffset = 5;
    public static final int INDEXNAMEOFFSET_FIELD_NUMBER = 5;
    private int indexNameOffset_;
    /**
     * <code>optional int32 indexNameOffset = 5;</code>
     */
    public boolean hasIndexNameOffset() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 indexNameOffset = 5;</code>
     */
    public int getIndexNameOffset() {
      return indexNameOffset_;
    }

    // repeated .OsmAnd.OBF.CityBlock cities = 8;
    public static final int CITIES_FIELD_NUMBER = 8;
    private java.util.List<net.osmand.binary.OsmandIndex.CityBlock> cities_;
    /**
     * <code>repeated .OsmAnd.OBF.CityBlock cities = 8;</code>
     */
    public java.util.List<net.osmand.binary.OsmandIndex.CityBlock> getCitiesList() {
      return cities_;
    }
    /**
     * <code>repeated .OsmAnd.OBF.CityBlock cities = 8;</code>
     */
    public java.util.List<? extends net.osmand.binary.OsmandIndex.CityBlockOrBuilder> 
        getCitiesOrBuilderList() {
      return cities_;
    }
    /**
     * <code>repeated .OsmAnd.OBF.CityBlock cities = 8;</code>
     */
    public int getCitiesCount() {
      return cities_.size();
    }
    /**
     * <code>repeated .OsmAnd.OBF.CityBlock cities = 8;</code>
     */
    public net.osmand.binary.OsmandIndex.CityBlock getCities(int index) {
      return cities_.get(index);
    }
    /**
     * <code>repeated .OsmAnd.OBF.CityBlock cities = 8;</code>
     */
    public net.osmand.binary.OsmandIndex.CityBlockOrBuilder getCitiesOrBuilder(
        int index) {
      return cities_.get(index);
    }

    // repeated string additionalTags = 9;
    public static final int ADDITIONALTAGS_FIELD_NUMBER = 9;
    private com.google.protobuf.LazyStringList additionalTags_;
    /**
     * <code>repeated string additionalTags = 9;</code>
     */
    public java.util.List<java.lang.String>
        getAdditionalTagsList() {
      return additionalTags_;
    }
    /**
     * <code>repeated string additionalTags = 9;</code>
     */
    public int getAdditionalTagsCount() {
      return additionalTags_.size();
    }
    /**
     * <code>repeated string additionalTags = 9;</code>
     */
    public java.lang.String getAdditionalTags(int index) {
      return additionalTags_.get(index);
    }
    /**
     * <code>repeated string additionalTags = 9;</code>
     */
    public com.google.protobuf.ByteString
        getAdditionalTagsBytes(int index) {
      return additionalTags_.getByteString(index);
    }

    private void initFields() {
      size_ = 0L;
      offset_ = 0L;
      name_ = "";
      nameEn_ = "";
      indexNameOffset_ = 0;
      cities_ = java.util.Collections.emptyList();
      additionalTags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCitiesCount(); i++) {
        if (!getCities(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getNameEnBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, indexNameOffset_);
      }
      for (int i = 0; i < cities_.size(); i++) {
        output.writeMessage(8, cities_.get(i));
      }
      for (int i = 0; i < additionalTags_.size(); i++) {
        output.writeBytes(9, additionalTags_.getByteString(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getNameEnBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, indexNameOffset_);
      }
      for (int i = 0; i < cities_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, cities_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < additionalTags_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(additionalTags_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getAdditionalTagsList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.osmand.binary.OsmandIndex.AddressPart parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.AddressPart parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.AddressPart parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.AddressPart parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.AddressPart parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.AddressPart parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.AddressPart parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.AddressPart parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.AddressPart parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.AddressPart parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandIndex.AddressPart prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code OsmAnd.OBF.AddressPart}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          net.osmand.binary.OsmandIndex.AddressPart, Builder>
        implements net.osmand.binary.OsmandIndex.AddressPartOrBuilder {
      // Construct using net.osmand.binary.OsmandIndex.AddressPart.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        size_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        offset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        nameEn_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        indexNameOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        cities_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        additionalTags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public net.osmand.binary.OsmandIndex.AddressPart getDefaultInstanceForType() {
        return net.osmand.binary.OsmandIndex.AddressPart.getDefaultInstance();
      }

      public net.osmand.binary.OsmandIndex.AddressPart build() {
        net.osmand.binary.OsmandIndex.AddressPart result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.osmand.binary.OsmandIndex.AddressPart buildPartial() {
        net.osmand.binary.OsmandIndex.AddressPart result = new net.osmand.binary.OsmandIndex.AddressPart(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.offset_ = offset_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.nameEn_ = nameEn_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.indexNameOffset_ = indexNameOffset_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          cities_ = java.util.Collections.unmodifiableList(cities_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.cities_ = cities_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          additionalTags_ = new com.google.protobuf.UnmodifiableLazyStringList(
              additionalTags_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.additionalTags_ = additionalTags_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(net.osmand.binary.OsmandIndex.AddressPart other) {
        if (other == net.osmand.binary.OsmandIndex.AddressPart.getDefaultInstance()) return this;
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000004;
          name_ = other.name_;
          
        }
        if (other.hasNameEn()) {
          bitField0_ |= 0x00000008;
          nameEn_ = other.nameEn_;
          
        }
        if (other.hasIndexNameOffset()) {
          setIndexNameOffset(other.getIndexNameOffset());
        }
        if (!other.cities_.isEmpty()) {
          if (cities_.isEmpty()) {
            cities_ = other.cities_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureCitiesIsMutable();
            cities_.addAll(other.cities_);
          }
          
        }
        if (!other.additionalTags_.isEmpty()) {
          if (additionalTags_.isEmpty()) {
            additionalTags_ = other.additionalTags_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureAdditionalTagsIsMutable();
            additionalTags_.addAll(other.additionalTags_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSize()) {
          
          return false;
        }
        if (!hasOffset()) {
          
          return false;
        }
        for (int i = 0; i < getCitiesCount(); i++) {
          if (!getCities(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.osmand.binary.OsmandIndex.AddressPart parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.osmand.binary.OsmandIndex.AddressPart) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 size = 1;
      private long size_ ;
      /**
       * <code>required int64 size = 1;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public long getSize() {
        return size_;
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public Builder setSize(long value) {
        bitField0_ |= 0x00000001;
        size_ = value;
        
        return this;
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0L;
        
        return this;
      }

      // required int64 offset = 2;
      private long offset_ ;
      /**
       * <code>required int64 offset = 2;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public long getOffset() {
        return offset_;
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public Builder setOffset(long value) {
        bitField0_ |= 0x00000002;
        offset_ = value;
        
        return this;
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000002);
        offset_ = 0L;
        
        return this;
      }

      // optional string name = 3;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 3;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = getDefaultInstance().getName();
        
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        
        return this;
      }

      // optional string nameEn = 4;
      private java.lang.Object nameEn_ = "";
      /**
       * <code>optional string nameEn = 4;</code>
       */
      public boolean hasNameEn() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string nameEn = 4;</code>
       */
      public java.lang.String getNameEn() {
        java.lang.Object ref = nameEn_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          nameEn_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string nameEn = 4;</code>
       */
      public com.google.protobuf.ByteString
          getNameEnBytes() {
        java.lang.Object ref = nameEn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nameEn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nameEn = 4;</code>
       */
      public Builder setNameEn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        nameEn_ = value;
        
        return this;
      }
      /**
       * <code>optional string nameEn = 4;</code>
       */
      public Builder clearNameEn() {
        bitField0_ = (bitField0_ & ~0x00000008);
        nameEn_ = getDefaultInstance().getNameEn();
        
        return this;
      }
      /**
       * <code>optional string nameEn = 4;</code>
       */
      public Builder setNameEnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        nameEn_ = value;
        
        return this;
      }

      // optional int32 indexNameOffset = 5;
      private int indexNameOffset_ ;
      /**
       * <code>optional int32 indexNameOffset = 5;</code>
       */
      public boolean hasIndexNameOffset() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 indexNameOffset = 5;</code>
       */
      public int getIndexNameOffset() {
        return indexNameOffset_;
      }
      /**
       * <code>optional int32 indexNameOffset = 5;</code>
       */
      public Builder setIndexNameOffset(int value) {
        bitField0_ |= 0x00000010;
        indexNameOffset_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 indexNameOffset = 5;</code>
       */
      public Builder clearIndexNameOffset() {
        bitField0_ = (bitField0_ & ~0x00000010);
        indexNameOffset_ = 0;
        
        return this;
      }

      // repeated .OsmAnd.OBF.CityBlock cities = 8;
      private java.util.List<net.osmand.binary.OsmandIndex.CityBlock> cities_ =
        java.util.Collections.emptyList();
      private void ensureCitiesIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          cities_ = new java.util.ArrayList<net.osmand.binary.OsmandIndex.CityBlock>(cities_);
          bitField0_ |= 0x00000020;
         }
      }

      /**
       * <code>repeated .OsmAnd.OBF.CityBlock cities = 8;</code>
       */
      public java.util.List<net.osmand.binary.OsmandIndex.CityBlock> getCitiesList() {
        return java.util.Collections.unmodifiableList(cities_);
      }
      /**
       * <code>repeated .OsmAnd.OBF.CityBlock cities = 8;</code>
       */
      public int getCitiesCount() {
        return cities_.size();
      }
      /**
       * <code>repeated .OsmAnd.OBF.CityBlock cities = 8;</code>
       */
      public net.osmand.binary.OsmandIndex.CityBlock getCities(int index) {
        return cities_.get(index);
      }
      /**
       * <code>repeated .OsmAnd.OBF.CityBlock cities = 8;</code>
       */
      public Builder setCities(
          int index, net.osmand.binary.OsmandIndex.CityBlock value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCitiesIsMutable();
        cities_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.CityBlock cities = 8;</code>
       */
      public Builder setCities(
          int index, net.osmand.binary.OsmandIndex.CityBlock.Builder builderForValue) {
        ensureCitiesIsMutable();
        cities_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.CityBlock cities = 8;</code>
       */
      public Builder addCities(net.osmand.binary.OsmandIndex.CityBlock value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCitiesIsMutable();
        cities_.add(value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.CityBlock cities = 8;</code>
       */
      public Builder addCities(
          int index, net.osmand.binary.OsmandIndex.CityBlock value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCitiesIsMutable();
        cities_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.CityBlock cities = 8;</code>
       */
      public Builder addCities(
          net.osmand.binary.OsmandIndex.CityBlock.Builder builderForValue) {
        ensureCitiesIsMutable();
        cities_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.CityBlock cities = 8;</code>
       */
      public Builder addCities(
          int index, net.osmand.binary.OsmandIndex.CityBlock.Builder builderForValue) {
        ensureCitiesIsMutable();
        cities_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.CityBlock cities = 8;</code>
       */
      public Builder addAllCities(
          java.lang.Iterable<? extends net.osmand.binary.OsmandIndex.CityBlock> values) {
        ensureCitiesIsMutable();
        super.addAll(values, cities_);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.CityBlock cities = 8;</code>
       */
      public Builder clearCities() {
        cities_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.CityBlock cities = 8;</code>
       */
      public Builder removeCities(int index) {
        ensureCitiesIsMutable();
        cities_.remove(index);

        return this;
      }

      // repeated string additionalTags = 9;
      private com.google.protobuf.LazyStringList additionalTags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAdditionalTagsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          additionalTags_ = new com.google.protobuf.LazyStringArrayList(additionalTags_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated string additionalTags = 9;</code>
       */
      public java.util.List<java.lang.String>
          getAdditionalTagsList() {
        return java.util.Collections.unmodifiableList(additionalTags_);
      }
      /**
       * <code>repeated string additionalTags = 9;</code>
       */
      public int getAdditionalTagsCount() {
        return additionalTags_.size();
      }
      /**
       * <code>repeated string additionalTags = 9;</code>
       */
      public java.lang.String getAdditionalTags(int index) {
        return additionalTags_.get(index);
      }
      /**
       * <code>repeated string additionalTags = 9;</code>
       */
      public com.google.protobuf.ByteString
          getAdditionalTagsBytes(int index) {
        return additionalTags_.getByteString(index);
      }
      /**
       * <code>repeated string additionalTags = 9;</code>
       */
      public Builder setAdditionalTags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAdditionalTagsIsMutable();
        additionalTags_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated string additionalTags = 9;</code>
       */
      public Builder addAdditionalTags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAdditionalTagsIsMutable();
        additionalTags_.add(value);
        
        return this;
      }
      /**
       * <code>repeated string additionalTags = 9;</code>
       */
      public Builder addAllAdditionalTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureAdditionalTagsIsMutable();
        super.addAll(values, additionalTags_);
        
        return this;
      }
      /**
       * <code>repeated string additionalTags = 9;</code>
       */
      public Builder clearAdditionalTags() {
        additionalTags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        
        return this;
      }
      /**
       * <code>repeated string additionalTags = 9;</code>
       */
      public Builder addAdditionalTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAdditionalTagsIsMutable();
        additionalTags_.add(value);
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.AddressPart)
    }

    static {
      defaultInstance = new AddressPart(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.AddressPart)
  }

  public interface CityBlockOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int64 size = 1;
    /**
     * <code>required int64 size = 1;</code>
     */
    boolean hasSize();
    /**
     * <code>required int64 size = 1;</code>
     */
    long getSize();

    // required int64 offset = 2;
    /**
     * <code>required int64 offset = 2;</code>
     */
    boolean hasOffset();
    /**
     * <code>required int64 offset = 2;</code>
     */
    long getOffset();

    // required int32 type = 3;
    /**
     * <code>required int32 type = 3;</code>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 3;</code>
     */
    int getType();
  }
  /**
   * Protobuf type {@code OsmAnd.OBF.CityBlock}
   */
  public static final class CityBlock extends
      com.google.protobuf.GeneratedMessageLite
      implements CityBlockOrBuilder {
    // Use CityBlock.newBuilder() to construct.
    private CityBlock(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CityBlock(boolean noInit) {}

    private static final CityBlock defaultInstance;
    public static CityBlock getDefaultInstance() {
      return defaultInstance;
    }

    public CityBlock getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CityBlock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              size_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              offset_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              type_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CityBlock> PARSER =
        new com.google.protobuf.AbstractParser<CityBlock>() {
      public CityBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CityBlock(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CityBlock> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 size = 1;
    public static final int SIZE_FIELD_NUMBER = 1;
    private long size_;
    /**
     * <code>required int64 size = 1;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 size = 1;</code>
     */
    public long getSize() {
      return size_;
    }

    // required int64 offset = 2;
    public static final int OFFSET_FIELD_NUMBER = 2;
    private long offset_;
    /**
     * <code>required int64 offset = 2;</code>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 offset = 2;</code>
     */
    public long getOffset() {
      return offset_;
    }

    // required int32 type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    /**
     * <code>required int32 type = 3;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 type = 3;</code>
     */
    public int getType() {
      return type_;
    }

    private void initFields() {
      size_ = 0L;
      offset_ = 0L;
      type_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, type_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, type_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.osmand.binary.OsmandIndex.CityBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.CityBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.CityBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.CityBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.CityBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.CityBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.CityBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.CityBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.CityBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.CityBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandIndex.CityBlock prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code OsmAnd.OBF.CityBlock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          net.osmand.binary.OsmandIndex.CityBlock, Builder>
        implements net.osmand.binary.OsmandIndex.CityBlockOrBuilder {
      // Construct using net.osmand.binary.OsmandIndex.CityBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        size_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        offset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public net.osmand.binary.OsmandIndex.CityBlock getDefaultInstanceForType() {
        return net.osmand.binary.OsmandIndex.CityBlock.getDefaultInstance();
      }

      public net.osmand.binary.OsmandIndex.CityBlock build() {
        net.osmand.binary.OsmandIndex.CityBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.osmand.binary.OsmandIndex.CityBlock buildPartial() {
        net.osmand.binary.OsmandIndex.CityBlock result = new net.osmand.binary.OsmandIndex.CityBlock(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.offset_ = offset_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(net.osmand.binary.OsmandIndex.CityBlock other) {
        if (other == net.osmand.binary.OsmandIndex.CityBlock.getDefaultInstance()) return this;
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSize()) {
          
          return false;
        }
        if (!hasOffset()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.osmand.binary.OsmandIndex.CityBlock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.osmand.binary.OsmandIndex.CityBlock) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 size = 1;
      private long size_ ;
      /**
       * <code>required int64 size = 1;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public long getSize() {
        return size_;
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public Builder setSize(long value) {
        bitField0_ |= 0x00000001;
        size_ = value;
        
        return this;
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0L;
        
        return this;
      }

      // required int64 offset = 2;
      private long offset_ ;
      /**
       * <code>required int64 offset = 2;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public long getOffset() {
        return offset_;
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public Builder setOffset(long value) {
        bitField0_ |= 0x00000002;
        offset_ = value;
        
        return this;
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000002);
        offset_ = 0L;
        
        return this;
      }

      // required int32 type = 3;
      private int type_ ;
      /**
       * <code>required int32 type = 3;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 type = 3;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 3;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000004;
        type_ = value;
        
        return this;
      }
      /**
       * <code>required int32 type = 3;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.CityBlock)
    }

    static {
      defaultInstance = new CityBlock(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.CityBlock)
  }

  public interface PoiPartOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int64 size = 1;
    /**
     * <code>required int64 size = 1;</code>
     */
    boolean hasSize();
    /**
     * <code>required int64 size = 1;</code>
     */
    long getSize();

    // required int64 offset = 2;
    /**
     * <code>required int64 offset = 2;</code>
     */
    boolean hasOffset();
    /**
     * <code>required int64 offset = 2;</code>
     */
    long getOffset();

    // optional string name = 3;
    /**
     * <code>optional string name = 3;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required int32 left = 4;
    /**
     * <code>required int32 left = 4;</code>
     */
    boolean hasLeft();
    /**
     * <code>required int32 left = 4;</code>
     */
    int getLeft();

    // required int32 right = 5;
    /**
     * <code>required int32 right = 5;</code>
     */
    boolean hasRight();
    /**
     * <code>required int32 right = 5;</code>
     */
    int getRight();

    // required int32 top = 6;
    /**
     * <code>required int32 top = 6;</code>
     */
    boolean hasTop();
    /**
     * <code>required int32 top = 6;</code>
     */
    int getTop();

    // required int32 bottom = 7;
    /**
     * <code>required int32 bottom = 7;</code>
     */
    boolean hasBottom();
    /**
     * <code>required int32 bottom = 7;</code>
     */
    int getBottom();
  }
  /**
   * Protobuf type {@code OsmAnd.OBF.PoiPart}
   */
  public static final class PoiPart extends
      com.google.protobuf.GeneratedMessageLite
      implements PoiPartOrBuilder {
    // Use PoiPart.newBuilder() to construct.
    private PoiPart(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private PoiPart(boolean noInit) {}

    private static final PoiPart defaultInstance;
    public static PoiPart getDefaultInstance() {
      return defaultInstance;
    }

    public PoiPart getDefaultInstanceForType() {
      return defaultInstance;
    }

    private PoiPart(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              size_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              offset_ = input.readInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              name_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              left_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              right_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              top_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              bottom_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<PoiPart> PARSER =
        new com.google.protobuf.AbstractParser<PoiPart>() {
      public PoiPart parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PoiPart(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PoiPart> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 size = 1;
    public static final int SIZE_FIELD_NUMBER = 1;
    private long size_;
    /**
     * <code>required int64 size = 1;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 size = 1;</code>
     */
    public long getSize() {
      return size_;
    }

    // required int64 offset = 2;
    public static final int OFFSET_FIELD_NUMBER = 2;
    private long offset_;
    /**
     * <code>required int64 offset = 2;</code>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 offset = 2;</code>
     */
    public long getOffset() {
      return offset_;
    }

    // optional string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 3;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 left = 4;
    public static final int LEFT_FIELD_NUMBER = 4;
    private int left_;
    /**
     * <code>required int32 left = 4;</code>
     */
    public boolean hasLeft() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 left = 4;</code>
     */
    public int getLeft() {
      return left_;
    }

    // required int32 right = 5;
    public static final int RIGHT_FIELD_NUMBER = 5;
    private int right_;
    /**
     * <code>required int32 right = 5;</code>
     */
    public boolean hasRight() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 right = 5;</code>
     */
    public int getRight() {
      return right_;
    }

    // required int32 top = 6;
    public static final int TOP_FIELD_NUMBER = 6;
    private int top_;
    /**
     * <code>required int32 top = 6;</code>
     */
    public boolean hasTop() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 top = 6;</code>
     */
    public int getTop() {
      return top_;
    }

    // required int32 bottom = 7;
    public static final int BOTTOM_FIELD_NUMBER = 7;
    private int bottom_;
    /**
     * <code>required int32 bottom = 7;</code>
     */
    public boolean hasBottom() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 bottom = 7;</code>
     */
    public int getBottom() {
      return bottom_;
    }

    private void initFields() {
      size_ = 0L;
      offset_ = 0L;
      name_ = "";
      left_ = 0;
      right_ = 0;
      top_ = 0;
      bottom_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLeft()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTop()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBottom()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, left_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, right_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, top_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, bottom_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, left_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, right_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, top_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, bottom_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.osmand.binary.OsmandIndex.PoiPart parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.PoiPart parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.PoiPart parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.PoiPart parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.PoiPart parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.PoiPart parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.PoiPart parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.PoiPart parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.PoiPart parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.PoiPart parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandIndex.PoiPart prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code OsmAnd.OBF.PoiPart}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          net.osmand.binary.OsmandIndex.PoiPart, Builder>
        implements net.osmand.binary.OsmandIndex.PoiPartOrBuilder {
      // Construct using net.osmand.binary.OsmandIndex.PoiPart.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        size_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        offset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        left_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        right_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        top_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        bottom_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public net.osmand.binary.OsmandIndex.PoiPart getDefaultInstanceForType() {
        return net.osmand.binary.OsmandIndex.PoiPart.getDefaultInstance();
      }

      public net.osmand.binary.OsmandIndex.PoiPart build() {
        net.osmand.binary.OsmandIndex.PoiPart result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.osmand.binary.OsmandIndex.PoiPart buildPartial() {
        net.osmand.binary.OsmandIndex.PoiPart result = new net.osmand.binary.OsmandIndex.PoiPart(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.offset_ = offset_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.left_ = left_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.right_ = right_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.top_ = top_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.bottom_ = bottom_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(net.osmand.binary.OsmandIndex.PoiPart other) {
        if (other == net.osmand.binary.OsmandIndex.PoiPart.getDefaultInstance()) return this;
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000004;
          name_ = other.name_;
          
        }
        if (other.hasLeft()) {
          setLeft(other.getLeft());
        }
        if (other.hasRight()) {
          setRight(other.getRight());
        }
        if (other.hasTop()) {
          setTop(other.getTop());
        }
        if (other.hasBottom()) {
          setBottom(other.getBottom());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSize()) {
          
          return false;
        }
        if (!hasOffset()) {
          
          return false;
        }
        if (!hasLeft()) {
          
          return false;
        }
        if (!hasRight()) {
          
          return false;
        }
        if (!hasTop()) {
          
          return false;
        }
        if (!hasBottom()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.osmand.binary.OsmandIndex.PoiPart parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.osmand.binary.OsmandIndex.PoiPart) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 size = 1;
      private long size_ ;
      /**
       * <code>required int64 size = 1;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public long getSize() {
        return size_;
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public Builder setSize(long value) {
        bitField0_ |= 0x00000001;
        size_ = value;
        
        return this;
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0L;
        
        return this;
      }

      // required int64 offset = 2;
      private long offset_ ;
      /**
       * <code>required int64 offset = 2;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public long getOffset() {
        return offset_;
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public Builder setOffset(long value) {
        bitField0_ |= 0x00000002;
        offset_ = value;
        
        return this;
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000002);
        offset_ = 0L;
        
        return this;
      }

      // optional string name = 3;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 3;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = getDefaultInstance().getName();
        
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        
        return this;
      }

      // required int32 left = 4;
      private int left_ ;
      /**
       * <code>required int32 left = 4;</code>
       */
      public boolean hasLeft() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 left = 4;</code>
       */
      public int getLeft() {
        return left_;
      }
      /**
       * <code>required int32 left = 4;</code>
       */
      public Builder setLeft(int value) {
        bitField0_ |= 0x00000008;
        left_ = value;
        
        return this;
      }
      /**
       * <code>required int32 left = 4;</code>
       */
      public Builder clearLeft() {
        bitField0_ = (bitField0_ & ~0x00000008);
        left_ = 0;
        
        return this;
      }

      // required int32 right = 5;
      private int right_ ;
      /**
       * <code>required int32 right = 5;</code>
       */
      public boolean hasRight() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 right = 5;</code>
       */
      public int getRight() {
        return right_;
      }
      /**
       * <code>required int32 right = 5;</code>
       */
      public Builder setRight(int value) {
        bitField0_ |= 0x00000010;
        right_ = value;
        
        return this;
      }
      /**
       * <code>required int32 right = 5;</code>
       */
      public Builder clearRight() {
        bitField0_ = (bitField0_ & ~0x00000010);
        right_ = 0;
        
        return this;
      }

      // required int32 top = 6;
      private int top_ ;
      /**
       * <code>required int32 top = 6;</code>
       */
      public boolean hasTop() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 top = 6;</code>
       */
      public int getTop() {
        return top_;
      }
      /**
       * <code>required int32 top = 6;</code>
       */
      public Builder setTop(int value) {
        bitField0_ |= 0x00000020;
        top_ = value;
        
        return this;
      }
      /**
       * <code>required int32 top = 6;</code>
       */
      public Builder clearTop() {
        bitField0_ = (bitField0_ & ~0x00000020);
        top_ = 0;
        
        return this;
      }

      // required int32 bottom = 7;
      private int bottom_ ;
      /**
       * <code>required int32 bottom = 7;</code>
       */
      public boolean hasBottom() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 bottom = 7;</code>
       */
      public int getBottom() {
        return bottom_;
      }
      /**
       * <code>required int32 bottom = 7;</code>
       */
      public Builder setBottom(int value) {
        bitField0_ |= 0x00000040;
        bottom_ = value;
        
        return this;
      }
      /**
       * <code>required int32 bottom = 7;</code>
       */
      public Builder clearBottom() {
        bitField0_ = (bitField0_ & ~0x00000040);
        bottom_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.PoiPart)
    }

    static {
      defaultInstance = new PoiPart(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.PoiPart)
  }

  public interface MapLevelOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int64 size = 1;
    /**
     * <code>required int64 size = 1;</code>
     */
    boolean hasSize();
    /**
     * <code>required int64 size = 1;</code>
     */
    long getSize();

    // required int64 offset = 2;
    /**
     * <code>required int64 offset = 2;</code>
     */
    boolean hasOffset();
    /**
     * <code>required int64 offset = 2;</code>
     */
    long getOffset();

    // required int32 left = 4;
    /**
     * <code>required int32 left = 4;</code>
     */
    boolean hasLeft();
    /**
     * <code>required int32 left = 4;</code>
     */
    int getLeft();

    // required int32 right = 5;
    /**
     * <code>required int32 right = 5;</code>
     */
    boolean hasRight();
    /**
     * <code>required int32 right = 5;</code>
     */
    int getRight();

    // required int32 top = 6;
    /**
     * <code>required int32 top = 6;</code>
     */
    boolean hasTop();
    /**
     * <code>required int32 top = 6;</code>
     */
    int getTop();

    // required int32 bottom = 7;
    /**
     * <code>required int32 bottom = 7;</code>
     */
    boolean hasBottom();
    /**
     * <code>required int32 bottom = 7;</code>
     */
    int getBottom();

    // optional int32 minzoom = 8;
    /**
     * <code>optional int32 minzoom = 8;</code>
     */
    boolean hasMinzoom();
    /**
     * <code>optional int32 minzoom = 8;</code>
     */
    int getMinzoom();

    // optional int32 maxzoom = 9;
    /**
     * <code>optional int32 maxzoom = 9;</code>
     */
    boolean hasMaxzoom();
    /**
     * <code>optional int32 maxzoom = 9;</code>
     */
    int getMaxzoom();
  }
  /**
   * Protobuf type {@code OsmAnd.OBF.MapLevel}
   */
  public static final class MapLevel extends
      com.google.protobuf.GeneratedMessageLite
      implements MapLevelOrBuilder {
    // Use MapLevel.newBuilder() to construct.
    private MapLevel(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private MapLevel(boolean noInit) {}

    private static final MapLevel defaultInstance;
    public static MapLevel getDefaultInstance() {
      return defaultInstance;
    }

    public MapLevel getDefaultInstanceForType() {
      return defaultInstance;
    }

    private MapLevel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              size_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              offset_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              left_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              right_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              top_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              bottom_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              minzoom_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              maxzoom_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<MapLevel> PARSER =
        new com.google.protobuf.AbstractParser<MapLevel>() {
      public MapLevel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapLevel(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MapLevel> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 size = 1;
    public static final int SIZE_FIELD_NUMBER = 1;
    private long size_;
    /**
     * <code>required int64 size = 1;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 size = 1;</code>
     */
    public long getSize() {
      return size_;
    }

    // required int64 offset = 2;
    public static final int OFFSET_FIELD_NUMBER = 2;
    private long offset_;
    /**
     * <code>required int64 offset = 2;</code>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 offset = 2;</code>
     */
    public long getOffset() {
      return offset_;
    }

    // required int32 left = 4;
    public static final int LEFT_FIELD_NUMBER = 4;
    private int left_;
    /**
     * <code>required int32 left = 4;</code>
     */
    public boolean hasLeft() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 left = 4;</code>
     */
    public int getLeft() {
      return left_;
    }

    // required int32 right = 5;
    public static final int RIGHT_FIELD_NUMBER = 5;
    private int right_;
    /**
     * <code>required int32 right = 5;</code>
     */
    public boolean hasRight() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 right = 5;</code>
     */
    public int getRight() {
      return right_;
    }

    // required int32 top = 6;
    public static final int TOP_FIELD_NUMBER = 6;
    private int top_;
    /**
     * <code>required int32 top = 6;</code>
     */
    public boolean hasTop() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 top = 6;</code>
     */
    public int getTop() {
      return top_;
    }

    // required int32 bottom = 7;
    public static final int BOTTOM_FIELD_NUMBER = 7;
    private int bottom_;
    /**
     * <code>required int32 bottom = 7;</code>
     */
    public boolean hasBottom() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 bottom = 7;</code>
     */
    public int getBottom() {
      return bottom_;
    }

    // optional int32 minzoom = 8;
    public static final int MINZOOM_FIELD_NUMBER = 8;
    private int minzoom_;
    /**
     * <code>optional int32 minzoom = 8;</code>
     */
    public boolean hasMinzoom() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 minzoom = 8;</code>
     */
    public int getMinzoom() {
      return minzoom_;
    }

    // optional int32 maxzoom = 9;
    public static final int MAXZOOM_FIELD_NUMBER = 9;
    private int maxzoom_;
    /**
     * <code>optional int32 maxzoom = 9;</code>
     */
    public boolean hasMaxzoom() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 maxzoom = 9;</code>
     */
    public int getMaxzoom() {
      return maxzoom_;
    }

    private void initFields() {
      size_ = 0L;
      offset_ = 0L;
      left_ = 0;
      right_ = 0;
      top_ = 0;
      bottom_ = 0;
      minzoom_ = 0;
      maxzoom_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLeft()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTop()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBottom()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, left_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, right_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, top_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, bottom_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, minzoom_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(9, maxzoom_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, left_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, right_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, top_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, bottom_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, minzoom_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, maxzoom_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.osmand.binary.OsmandIndex.MapLevel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.MapLevel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.MapLevel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.MapLevel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.MapLevel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.MapLevel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.MapLevel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.MapLevel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.MapLevel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.MapLevel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandIndex.MapLevel prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code OsmAnd.OBF.MapLevel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          net.osmand.binary.OsmandIndex.MapLevel, Builder>
        implements net.osmand.binary.OsmandIndex.MapLevelOrBuilder {
      // Construct using net.osmand.binary.OsmandIndex.MapLevel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        size_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        offset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        left_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        right_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        top_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        bottom_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        minzoom_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        maxzoom_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public net.osmand.binary.OsmandIndex.MapLevel getDefaultInstanceForType() {
        return net.osmand.binary.OsmandIndex.MapLevel.getDefaultInstance();
      }

      public net.osmand.binary.OsmandIndex.MapLevel build() {
        net.osmand.binary.OsmandIndex.MapLevel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.osmand.binary.OsmandIndex.MapLevel buildPartial() {
        net.osmand.binary.OsmandIndex.MapLevel result = new net.osmand.binary.OsmandIndex.MapLevel(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.offset_ = offset_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.left_ = left_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.right_ = right_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.top_ = top_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.bottom_ = bottom_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.minzoom_ = minzoom_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.maxzoom_ = maxzoom_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(net.osmand.binary.OsmandIndex.MapLevel other) {
        if (other == net.osmand.binary.OsmandIndex.MapLevel.getDefaultInstance()) return this;
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        if (other.hasLeft()) {
          setLeft(other.getLeft());
        }
        if (other.hasRight()) {
          setRight(other.getRight());
        }
        if (other.hasTop()) {
          setTop(other.getTop());
        }
        if (other.hasBottom()) {
          setBottom(other.getBottom());
        }
        if (other.hasMinzoom()) {
          setMinzoom(other.getMinzoom());
        }
        if (other.hasMaxzoom()) {
          setMaxzoom(other.getMaxzoom());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSize()) {
          
          return false;
        }
        if (!hasOffset()) {
          
          return false;
        }
        if (!hasLeft()) {
          
          return false;
        }
        if (!hasRight()) {
          
          return false;
        }
        if (!hasTop()) {
          
          return false;
        }
        if (!hasBottom()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.osmand.binary.OsmandIndex.MapLevel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.osmand.binary.OsmandIndex.MapLevel) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 size = 1;
      private long size_ ;
      /**
       * <code>required int64 size = 1;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public long getSize() {
        return size_;
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public Builder setSize(long value) {
        bitField0_ |= 0x00000001;
        size_ = value;
        
        return this;
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0L;
        
        return this;
      }

      // required int64 offset = 2;
      private long offset_ ;
      /**
       * <code>required int64 offset = 2;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public long getOffset() {
        return offset_;
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public Builder setOffset(long value) {
        bitField0_ |= 0x00000002;
        offset_ = value;
        
        return this;
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000002);
        offset_ = 0L;
        
        return this;
      }

      // required int32 left = 4;
      private int left_ ;
      /**
       * <code>required int32 left = 4;</code>
       */
      public boolean hasLeft() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 left = 4;</code>
       */
      public int getLeft() {
        return left_;
      }
      /**
       * <code>required int32 left = 4;</code>
       */
      public Builder setLeft(int value) {
        bitField0_ |= 0x00000004;
        left_ = value;
        
        return this;
      }
      /**
       * <code>required int32 left = 4;</code>
       */
      public Builder clearLeft() {
        bitField0_ = (bitField0_ & ~0x00000004);
        left_ = 0;
        
        return this;
      }

      // required int32 right = 5;
      private int right_ ;
      /**
       * <code>required int32 right = 5;</code>
       */
      public boolean hasRight() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 right = 5;</code>
       */
      public int getRight() {
        return right_;
      }
      /**
       * <code>required int32 right = 5;</code>
       */
      public Builder setRight(int value) {
        bitField0_ |= 0x00000008;
        right_ = value;
        
        return this;
      }
      /**
       * <code>required int32 right = 5;</code>
       */
      public Builder clearRight() {
        bitField0_ = (bitField0_ & ~0x00000008);
        right_ = 0;
        
        return this;
      }

      // required int32 top = 6;
      private int top_ ;
      /**
       * <code>required int32 top = 6;</code>
       */
      public boolean hasTop() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 top = 6;</code>
       */
      public int getTop() {
        return top_;
      }
      /**
       * <code>required int32 top = 6;</code>
       */
      public Builder setTop(int value) {
        bitField0_ |= 0x00000010;
        top_ = value;
        
        return this;
      }
      /**
       * <code>required int32 top = 6;</code>
       */
      public Builder clearTop() {
        bitField0_ = (bitField0_ & ~0x00000010);
        top_ = 0;
        
        return this;
      }

      // required int32 bottom = 7;
      private int bottom_ ;
      /**
       * <code>required int32 bottom = 7;</code>
       */
      public boolean hasBottom() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 bottom = 7;</code>
       */
      public int getBottom() {
        return bottom_;
      }
      /**
       * <code>required int32 bottom = 7;</code>
       */
      public Builder setBottom(int value) {
        bitField0_ |= 0x00000020;
        bottom_ = value;
        
        return this;
      }
      /**
       * <code>required int32 bottom = 7;</code>
       */
      public Builder clearBottom() {
        bitField0_ = (bitField0_ & ~0x00000020);
        bottom_ = 0;
        
        return this;
      }

      // optional int32 minzoom = 8;
      private int minzoom_ ;
      /**
       * <code>optional int32 minzoom = 8;</code>
       */
      public boolean hasMinzoom() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 minzoom = 8;</code>
       */
      public int getMinzoom() {
        return minzoom_;
      }
      /**
       * <code>optional int32 minzoom = 8;</code>
       */
      public Builder setMinzoom(int value) {
        bitField0_ |= 0x00000040;
        minzoom_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 minzoom = 8;</code>
       */
      public Builder clearMinzoom() {
        bitField0_ = (bitField0_ & ~0x00000040);
        minzoom_ = 0;
        
        return this;
      }

      // optional int32 maxzoom = 9;
      private int maxzoom_ ;
      /**
       * <code>optional int32 maxzoom = 9;</code>
       */
      public boolean hasMaxzoom() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 maxzoom = 9;</code>
       */
      public int getMaxzoom() {
        return maxzoom_;
      }
      /**
       * <code>optional int32 maxzoom = 9;</code>
       */
      public Builder setMaxzoom(int value) {
        bitField0_ |= 0x00000080;
        maxzoom_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 maxzoom = 9;</code>
       */
      public Builder clearMaxzoom() {
        bitField0_ = (bitField0_ & ~0x00000080);
        maxzoom_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.MapLevel)
    }

    static {
      defaultInstance = new MapLevel(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.MapLevel)
  }

  public interface MapPartOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int64 size = 1;
    /**
     * <code>required int64 size = 1;</code>
     */
    boolean hasSize();
    /**
     * <code>required int64 size = 1;</code>
     */
    long getSize();

    // required int64 offset = 2;
    /**
     * <code>required int64 offset = 2;</code>
     */
    boolean hasOffset();
    /**
     * <code>required int64 offset = 2;</code>
     */
    long getOffset();

    // optional string name = 3;
    /**
     * <code>optional string name = 3;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // repeated .OsmAnd.OBF.MapLevel levels = 5;
    /**
     * <code>repeated .OsmAnd.OBF.MapLevel levels = 5;</code>
     */
    java.util.List<net.osmand.binary.OsmandIndex.MapLevel> 
        getLevelsList();
    /**
     * <code>repeated .OsmAnd.OBF.MapLevel levels = 5;</code>
     */
    net.osmand.binary.OsmandIndex.MapLevel getLevels(int index);
    /**
     * <code>repeated .OsmAnd.OBF.MapLevel levels = 5;</code>
     */
    int getLevelsCount();
  }
  /**
   * Protobuf type {@code OsmAnd.OBF.MapPart}
   */
  public static final class MapPart extends
      com.google.protobuf.GeneratedMessageLite
      implements MapPartOrBuilder {
    // Use MapPart.newBuilder() to construct.
    private MapPart(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private MapPart(boolean noInit) {}

    private static final MapPart defaultInstance;
    public static MapPart getDefaultInstance() {
      return defaultInstance;
    }

    public MapPart getDefaultInstanceForType() {
      return defaultInstance;
    }

    private MapPart(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              size_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              offset_ = input.readInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              name_ = input.readBytes();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                levels_ = new java.util.ArrayList<net.osmand.binary.OsmandIndex.MapLevel>();
                mutable_bitField0_ |= 0x00000008;
              }
              levels_.add(input.readMessage(net.osmand.binary.OsmandIndex.MapLevel.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          levels_ = java.util.Collections.unmodifiableList(levels_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<MapPart> PARSER =
        new com.google.protobuf.AbstractParser<MapPart>() {
      public MapPart parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapPart(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MapPart> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 size = 1;
    public static final int SIZE_FIELD_NUMBER = 1;
    private long size_;
    /**
     * <code>required int64 size = 1;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 size = 1;</code>
     */
    public long getSize() {
      return size_;
    }

    // required int64 offset = 2;
    public static final int OFFSET_FIELD_NUMBER = 2;
    private long offset_;
    /**
     * <code>required int64 offset = 2;</code>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 offset = 2;</code>
     */
    public long getOffset() {
      return offset_;
    }

    // optional string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 3;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .OsmAnd.OBF.MapLevel levels = 5;
    public static final int LEVELS_FIELD_NUMBER = 5;
    private java.util.List<net.osmand.binary.OsmandIndex.MapLevel> levels_;
    /**
     * <code>repeated .OsmAnd.OBF.MapLevel levels = 5;</code>
     */
    public java.util.List<net.osmand.binary.OsmandIndex.MapLevel> getLevelsList() {
      return levels_;
    }
    /**
     * <code>repeated .OsmAnd.OBF.MapLevel levels = 5;</code>
     */
    public java.util.List<? extends net.osmand.binary.OsmandIndex.MapLevelOrBuilder> 
        getLevelsOrBuilderList() {
      return levels_;
    }
    /**
     * <code>repeated .OsmAnd.OBF.MapLevel levels = 5;</code>
     */
    public int getLevelsCount() {
      return levels_.size();
    }
    /**
     * <code>repeated .OsmAnd.OBF.MapLevel levels = 5;</code>
     */
    public net.osmand.binary.OsmandIndex.MapLevel getLevels(int index) {
      return levels_.get(index);
    }
    /**
     * <code>repeated .OsmAnd.OBF.MapLevel levels = 5;</code>
     */
    public net.osmand.binary.OsmandIndex.MapLevelOrBuilder getLevelsOrBuilder(
        int index) {
      return levels_.get(index);
    }

    private void initFields() {
      size_ = 0L;
      offset_ = 0L;
      name_ = "";
      levels_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getLevelsCount(); i++) {
        if (!getLevels(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNameBytes());
      }
      for (int i = 0; i < levels_.size(); i++) {
        output.writeMessage(5, levels_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNameBytes());
      }
      for (int i = 0; i < levels_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, levels_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.osmand.binary.OsmandIndex.MapPart parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.MapPart parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.MapPart parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.MapPart parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.MapPart parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.MapPart parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.MapPart parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.MapPart parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.MapPart parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.MapPart parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandIndex.MapPart prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code OsmAnd.OBF.MapPart}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          net.osmand.binary.OsmandIndex.MapPart, Builder>
        implements net.osmand.binary.OsmandIndex.MapPartOrBuilder {
      // Construct using net.osmand.binary.OsmandIndex.MapPart.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        size_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        offset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        levels_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public net.osmand.binary.OsmandIndex.MapPart getDefaultInstanceForType() {
        return net.osmand.binary.OsmandIndex.MapPart.getDefaultInstance();
      }

      public net.osmand.binary.OsmandIndex.MapPart build() {
        net.osmand.binary.OsmandIndex.MapPart result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.osmand.binary.OsmandIndex.MapPart buildPartial() {
        net.osmand.binary.OsmandIndex.MapPart result = new net.osmand.binary.OsmandIndex.MapPart(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.offset_ = offset_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.name_ = name_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          levels_ = java.util.Collections.unmodifiableList(levels_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.levels_ = levels_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(net.osmand.binary.OsmandIndex.MapPart other) {
        if (other == net.osmand.binary.OsmandIndex.MapPart.getDefaultInstance()) return this;
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000004;
          name_ = other.name_;
          
        }
        if (!other.levels_.isEmpty()) {
          if (levels_.isEmpty()) {
            levels_ = other.levels_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureLevelsIsMutable();
            levels_.addAll(other.levels_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSize()) {
          
          return false;
        }
        if (!hasOffset()) {
          
          return false;
        }
        for (int i = 0; i < getLevelsCount(); i++) {
          if (!getLevels(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.osmand.binary.OsmandIndex.MapPart parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.osmand.binary.OsmandIndex.MapPart) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 size = 1;
      private long size_ ;
      /**
       * <code>required int64 size = 1;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public long getSize() {
        return size_;
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public Builder setSize(long value) {
        bitField0_ |= 0x00000001;
        size_ = value;
        
        return this;
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0L;
        
        return this;
      }

      // required int64 offset = 2;
      private long offset_ ;
      /**
       * <code>required int64 offset = 2;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public long getOffset() {
        return offset_;
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public Builder setOffset(long value) {
        bitField0_ |= 0x00000002;
        offset_ = value;
        
        return this;
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000002);
        offset_ = 0L;
        
        return this;
      }

      // optional string name = 3;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 3;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = getDefaultInstance().getName();
        
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        
        return this;
      }

      // repeated .OsmAnd.OBF.MapLevel levels = 5;
      private java.util.List<net.osmand.binary.OsmandIndex.MapLevel> levels_ =
        java.util.Collections.emptyList();
      private void ensureLevelsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          levels_ = new java.util.ArrayList<net.osmand.binary.OsmandIndex.MapLevel>(levels_);
          bitField0_ |= 0x00000008;
         }
      }

      /**
       * <code>repeated .OsmAnd.OBF.MapLevel levels = 5;</code>
       */
      public java.util.List<net.osmand.binary.OsmandIndex.MapLevel> getLevelsList() {
        return java.util.Collections.unmodifiableList(levels_);
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapLevel levels = 5;</code>
       */
      public int getLevelsCount() {
        return levels_.size();
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapLevel levels = 5;</code>
       */
      public net.osmand.binary.OsmandIndex.MapLevel getLevels(int index) {
        return levels_.get(index);
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapLevel levels = 5;</code>
       */
      public Builder setLevels(
          int index, net.osmand.binary.OsmandIndex.MapLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLevelsIsMutable();
        levels_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapLevel levels = 5;</code>
       */
      public Builder setLevels(
          int index, net.osmand.binary.OsmandIndex.MapLevel.Builder builderForValue) {
        ensureLevelsIsMutable();
        levels_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapLevel levels = 5;</code>
       */
      public Builder addLevels(net.osmand.binary.OsmandIndex.MapLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLevelsIsMutable();
        levels_.add(value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapLevel levels = 5;</code>
       */
      public Builder addLevels(
          int index, net.osmand.binary.OsmandIndex.MapLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLevelsIsMutable();
        levels_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapLevel levels = 5;</code>
       */
      public Builder addLevels(
          net.osmand.binary.OsmandIndex.MapLevel.Builder builderForValue) {
        ensureLevelsIsMutable();
        levels_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapLevel levels = 5;</code>
       */
      public Builder addLevels(
          int index, net.osmand.binary.OsmandIndex.MapLevel.Builder builderForValue) {
        ensureLevelsIsMutable();
        levels_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapLevel levels = 5;</code>
       */
      public Builder addAllLevels(
          java.lang.Iterable<? extends net.osmand.binary.OsmandIndex.MapLevel> values) {
        ensureLevelsIsMutable();
        super.addAll(values, levels_);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapLevel levels = 5;</code>
       */
      public Builder clearLevels() {
        levels_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.MapLevel levels = 5;</code>
       */
      public Builder removeLevels(int index) {
        ensureLevelsIsMutable();
        levels_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.MapPart)
    }

    static {
      defaultInstance = new MapPart(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.MapPart)
  }

  public interface RoutingSubregionOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int64 size = 1;
    /**
     * <code>required int64 size = 1;</code>
     */
    boolean hasSize();
    /**
     * <code>required int64 size = 1;</code>
     */
    long getSize();

    // required int64 offset = 2;
    /**
     * <code>required int64 offset = 2;</code>
     */
    boolean hasOffset();
    /**
     * <code>required int64 offset = 2;</code>
     */
    long getOffset();

    // optional bool basemap = 3;
    /**
     * <code>optional bool basemap = 3;</code>
     */
    boolean hasBasemap();
    /**
     * <code>optional bool basemap = 3;</code>
     */
    boolean getBasemap();

    // required int32 left = 4;
    /**
     * <code>required int32 left = 4;</code>
     */
    boolean hasLeft();
    /**
     * <code>required int32 left = 4;</code>
     */
    int getLeft();

    // required int32 right = 5;
    /**
     * <code>required int32 right = 5;</code>
     */
    boolean hasRight();
    /**
     * <code>required int32 right = 5;</code>
     */
    int getRight();

    // required int32 top = 6;
    /**
     * <code>required int32 top = 6;</code>
     */
    boolean hasTop();
    /**
     * <code>required int32 top = 6;</code>
     */
    int getTop();

    // required int32 bottom = 7;
    /**
     * <code>required int32 bottom = 7;</code>
     */
    boolean hasBottom();
    /**
     * <code>required int32 bottom = 7;</code>
     */
    int getBottom();

    // required uint32 shifToData = 8;
    /**
     * <code>required uint32 shifToData = 8;</code>
     */
    boolean hasShifToData();
    /**
     * <code>required uint32 shifToData = 8;</code>
     */
    int getShifToData();
  }
  /**
   * Protobuf type {@code OsmAnd.OBF.RoutingSubregion}
   */
  public static final class RoutingSubregion extends
      com.google.protobuf.GeneratedMessageLite
      implements RoutingSubregionOrBuilder {
    // Use RoutingSubregion.newBuilder() to construct.
    private RoutingSubregion(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private RoutingSubregion(boolean noInit) {}

    private static final RoutingSubregion defaultInstance;
    public static RoutingSubregion getDefaultInstance() {
      return defaultInstance;
    }

    public RoutingSubregion getDefaultInstanceForType() {
      return defaultInstance;
    }

    private RoutingSubregion(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              size_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              offset_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              basemap_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              left_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              right_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              top_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              bottom_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              shifToData_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<RoutingSubregion> PARSER =
        new com.google.protobuf.AbstractParser<RoutingSubregion>() {
      public RoutingSubregion parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoutingSubregion(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoutingSubregion> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 size = 1;
    public static final int SIZE_FIELD_NUMBER = 1;
    private long size_;
    /**
     * <code>required int64 size = 1;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 size = 1;</code>
     */
    public long getSize() {
      return size_;
    }

    // required int64 offset = 2;
    public static final int OFFSET_FIELD_NUMBER = 2;
    private long offset_;
    /**
     * <code>required int64 offset = 2;</code>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 offset = 2;</code>
     */
    public long getOffset() {
      return offset_;
    }

    // optional bool basemap = 3;
    public static final int BASEMAP_FIELD_NUMBER = 3;
    private boolean basemap_;
    /**
     * <code>optional bool basemap = 3;</code>
     */
    public boolean hasBasemap() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool basemap = 3;</code>
     */
    public boolean getBasemap() {
      return basemap_;
    }

    // required int32 left = 4;
    public static final int LEFT_FIELD_NUMBER = 4;
    private int left_;
    /**
     * <code>required int32 left = 4;</code>
     */
    public boolean hasLeft() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 left = 4;</code>
     */
    public int getLeft() {
      return left_;
    }

    // required int32 right = 5;
    public static final int RIGHT_FIELD_NUMBER = 5;
    private int right_;
    /**
     * <code>required int32 right = 5;</code>
     */
    public boolean hasRight() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 right = 5;</code>
     */
    public int getRight() {
      return right_;
    }

    // required int32 top = 6;
    public static final int TOP_FIELD_NUMBER = 6;
    private int top_;
    /**
     * <code>required int32 top = 6;</code>
     */
    public boolean hasTop() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 top = 6;</code>
     */
    public int getTop() {
      return top_;
    }

    // required int32 bottom = 7;
    public static final int BOTTOM_FIELD_NUMBER = 7;
    private int bottom_;
    /**
     * <code>required int32 bottom = 7;</code>
     */
    public boolean hasBottom() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 bottom = 7;</code>
     */
    public int getBottom() {
      return bottom_;
    }

    // required uint32 shifToData = 8;
    public static final int SHIFTODATA_FIELD_NUMBER = 8;
    private int shifToData_;
    /**
     * <code>required uint32 shifToData = 8;</code>
     */
    public boolean hasShifToData() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required uint32 shifToData = 8;</code>
     */
    public int getShifToData() {
      return shifToData_;
    }

    private void initFields() {
      size_ = 0L;
      offset_ = 0L;
      basemap_ = false;
      left_ = 0;
      right_ = 0;
      top_ = 0;
      bottom_ = 0;
      shifToData_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLeft()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTop()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBottom()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasShifToData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, basemap_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, left_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, right_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, top_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, bottom_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, shifToData_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, basemap_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, left_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, right_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, top_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, bottom_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, shifToData_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.osmand.binary.OsmandIndex.RoutingSubregion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.RoutingSubregion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.RoutingSubregion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.RoutingSubregion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.RoutingSubregion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.RoutingSubregion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.RoutingSubregion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.RoutingSubregion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.RoutingSubregion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.RoutingSubregion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandIndex.RoutingSubregion prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code OsmAnd.OBF.RoutingSubregion}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          net.osmand.binary.OsmandIndex.RoutingSubregion, Builder>
        implements net.osmand.binary.OsmandIndex.RoutingSubregionOrBuilder {
      // Construct using net.osmand.binary.OsmandIndex.RoutingSubregion.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        size_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        offset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        basemap_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        left_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        right_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        top_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        bottom_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        shifToData_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public net.osmand.binary.OsmandIndex.RoutingSubregion getDefaultInstanceForType() {
        return net.osmand.binary.OsmandIndex.RoutingSubregion.getDefaultInstance();
      }

      public net.osmand.binary.OsmandIndex.RoutingSubregion build() {
        net.osmand.binary.OsmandIndex.RoutingSubregion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.osmand.binary.OsmandIndex.RoutingSubregion buildPartial() {
        net.osmand.binary.OsmandIndex.RoutingSubregion result = new net.osmand.binary.OsmandIndex.RoutingSubregion(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.offset_ = offset_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.basemap_ = basemap_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.left_ = left_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.right_ = right_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.top_ = top_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.bottom_ = bottom_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.shifToData_ = shifToData_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(net.osmand.binary.OsmandIndex.RoutingSubregion other) {
        if (other == net.osmand.binary.OsmandIndex.RoutingSubregion.getDefaultInstance()) return this;
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        if (other.hasBasemap()) {
          setBasemap(other.getBasemap());
        }
        if (other.hasLeft()) {
          setLeft(other.getLeft());
        }
        if (other.hasRight()) {
          setRight(other.getRight());
        }
        if (other.hasTop()) {
          setTop(other.getTop());
        }
        if (other.hasBottom()) {
          setBottom(other.getBottom());
        }
        if (other.hasShifToData()) {
          setShifToData(other.getShifToData());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSize()) {
          
          return false;
        }
        if (!hasOffset()) {
          
          return false;
        }
        if (!hasLeft()) {
          
          return false;
        }
        if (!hasRight()) {
          
          return false;
        }
        if (!hasTop()) {
          
          return false;
        }
        if (!hasBottom()) {
          
          return false;
        }
        if (!hasShifToData()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.osmand.binary.OsmandIndex.RoutingSubregion parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.osmand.binary.OsmandIndex.RoutingSubregion) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 size = 1;
      private long size_ ;
      /**
       * <code>required int64 size = 1;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public long getSize() {
        return size_;
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public Builder setSize(long value) {
        bitField0_ |= 0x00000001;
        size_ = value;
        
        return this;
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0L;
        
        return this;
      }

      // required int64 offset = 2;
      private long offset_ ;
      /**
       * <code>required int64 offset = 2;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public long getOffset() {
        return offset_;
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public Builder setOffset(long value) {
        bitField0_ |= 0x00000002;
        offset_ = value;
        
        return this;
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000002);
        offset_ = 0L;
        
        return this;
      }

      // optional bool basemap = 3;
      private boolean basemap_ ;
      /**
       * <code>optional bool basemap = 3;</code>
       */
      public boolean hasBasemap() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool basemap = 3;</code>
       */
      public boolean getBasemap() {
        return basemap_;
      }
      /**
       * <code>optional bool basemap = 3;</code>
       */
      public Builder setBasemap(boolean value) {
        bitField0_ |= 0x00000004;
        basemap_ = value;
        
        return this;
      }
      /**
       * <code>optional bool basemap = 3;</code>
       */
      public Builder clearBasemap() {
        bitField0_ = (bitField0_ & ~0x00000004);
        basemap_ = false;
        
        return this;
      }

      // required int32 left = 4;
      private int left_ ;
      /**
       * <code>required int32 left = 4;</code>
       */
      public boolean hasLeft() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 left = 4;</code>
       */
      public int getLeft() {
        return left_;
      }
      /**
       * <code>required int32 left = 4;</code>
       */
      public Builder setLeft(int value) {
        bitField0_ |= 0x00000008;
        left_ = value;
        
        return this;
      }
      /**
       * <code>required int32 left = 4;</code>
       */
      public Builder clearLeft() {
        bitField0_ = (bitField0_ & ~0x00000008);
        left_ = 0;
        
        return this;
      }

      // required int32 right = 5;
      private int right_ ;
      /**
       * <code>required int32 right = 5;</code>
       */
      public boolean hasRight() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 right = 5;</code>
       */
      public int getRight() {
        return right_;
      }
      /**
       * <code>required int32 right = 5;</code>
       */
      public Builder setRight(int value) {
        bitField0_ |= 0x00000010;
        right_ = value;
        
        return this;
      }
      /**
       * <code>required int32 right = 5;</code>
       */
      public Builder clearRight() {
        bitField0_ = (bitField0_ & ~0x00000010);
        right_ = 0;
        
        return this;
      }

      // required int32 top = 6;
      private int top_ ;
      /**
       * <code>required int32 top = 6;</code>
       */
      public boolean hasTop() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 top = 6;</code>
       */
      public int getTop() {
        return top_;
      }
      /**
       * <code>required int32 top = 6;</code>
       */
      public Builder setTop(int value) {
        bitField0_ |= 0x00000020;
        top_ = value;
        
        return this;
      }
      /**
       * <code>required int32 top = 6;</code>
       */
      public Builder clearTop() {
        bitField0_ = (bitField0_ & ~0x00000020);
        top_ = 0;
        
        return this;
      }

      // required int32 bottom = 7;
      private int bottom_ ;
      /**
       * <code>required int32 bottom = 7;</code>
       */
      public boolean hasBottom() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 bottom = 7;</code>
       */
      public int getBottom() {
        return bottom_;
      }
      /**
       * <code>required int32 bottom = 7;</code>
       */
      public Builder setBottom(int value) {
        bitField0_ |= 0x00000040;
        bottom_ = value;
        
        return this;
      }
      /**
       * <code>required int32 bottom = 7;</code>
       */
      public Builder clearBottom() {
        bitField0_ = (bitField0_ & ~0x00000040);
        bottom_ = 0;
        
        return this;
      }

      // required uint32 shifToData = 8;
      private int shifToData_ ;
      /**
       * <code>required uint32 shifToData = 8;</code>
       */
      public boolean hasShifToData() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required uint32 shifToData = 8;</code>
       */
      public int getShifToData() {
        return shifToData_;
      }
      /**
       * <code>required uint32 shifToData = 8;</code>
       */
      public Builder setShifToData(int value) {
        bitField0_ |= 0x00000080;
        shifToData_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 shifToData = 8;</code>
       */
      public Builder clearShifToData() {
        bitField0_ = (bitField0_ & ~0x00000080);
        shifToData_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.RoutingSubregion)
    }

    static {
      defaultInstance = new RoutingSubregion(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.RoutingSubregion)
  }

  public interface RoutingPartOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int64 size = 1;
    /**
     * <code>required int64 size = 1;</code>
     */
    boolean hasSize();
    /**
     * <code>required int64 size = 1;</code>
     */
    long getSize();

    // required int64 offset = 2;
    /**
     * <code>required int64 offset = 2;</code>
     */
    boolean hasOffset();
    /**
     * <code>required int64 offset = 2;</code>
     */
    long getOffset();

    // optional string name = 3;
    /**
     * <code>optional string name = 3;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;
    /**
     * <code>repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;</code>
     */
    java.util.List<net.osmand.binary.OsmandIndex.RoutingSubregion> 
        getSubregionsList();
    /**
     * <code>repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;</code>
     */
    net.osmand.binary.OsmandIndex.RoutingSubregion getSubregions(int index);
    /**
     * <code>repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;</code>
     */
    int getSubregionsCount();
  }
  /**
   * Protobuf type {@code OsmAnd.OBF.RoutingPart}
   */
  public static final class RoutingPart extends
      com.google.protobuf.GeneratedMessageLite
      implements RoutingPartOrBuilder {
    // Use RoutingPart.newBuilder() to construct.
    private RoutingPart(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private RoutingPart(boolean noInit) {}

    private static final RoutingPart defaultInstance;
    public static RoutingPart getDefaultInstance() {
      return defaultInstance;
    }

    public RoutingPart getDefaultInstanceForType() {
      return defaultInstance;
    }

    private RoutingPart(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              size_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              offset_ = input.readInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              name_ = input.readBytes();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                subregions_ = new java.util.ArrayList<net.osmand.binary.OsmandIndex.RoutingSubregion>();
                mutable_bitField0_ |= 0x00000008;
              }
              subregions_.add(input.readMessage(net.osmand.binary.OsmandIndex.RoutingSubregion.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          subregions_ = java.util.Collections.unmodifiableList(subregions_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<RoutingPart> PARSER =
        new com.google.protobuf.AbstractParser<RoutingPart>() {
      public RoutingPart parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoutingPart(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoutingPart> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 size = 1;
    public static final int SIZE_FIELD_NUMBER = 1;
    private long size_;
    /**
     * <code>required int64 size = 1;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 size = 1;</code>
     */
    public long getSize() {
      return size_;
    }

    // required int64 offset = 2;
    public static final int OFFSET_FIELD_NUMBER = 2;
    private long offset_;
    /**
     * <code>required int64 offset = 2;</code>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 offset = 2;</code>
     */
    public long getOffset() {
      return offset_;
    }

    // optional string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 3;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;
    public static final int SUBREGIONS_FIELD_NUMBER = 5;
    private java.util.List<net.osmand.binary.OsmandIndex.RoutingSubregion> subregions_;
    /**
     * <code>repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;</code>
     */
    public java.util.List<net.osmand.binary.OsmandIndex.RoutingSubregion> getSubregionsList() {
      return subregions_;
    }
    /**
     * <code>repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;</code>
     */
    public java.util.List<? extends net.osmand.binary.OsmandIndex.RoutingSubregionOrBuilder> 
        getSubregionsOrBuilderList() {
      return subregions_;
    }
    /**
     * <code>repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;</code>
     */
    public int getSubregionsCount() {
      return subregions_.size();
    }
    /**
     * <code>repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;</code>
     */
    public net.osmand.binary.OsmandIndex.RoutingSubregion getSubregions(int index) {
      return subregions_.get(index);
    }
    /**
     * <code>repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;</code>
     */
    public net.osmand.binary.OsmandIndex.RoutingSubregionOrBuilder getSubregionsOrBuilder(
        int index) {
      return subregions_.get(index);
    }

    private void initFields() {
      size_ = 0L;
      offset_ = 0L;
      name_ = "";
      subregions_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSubregionsCount(); i++) {
        if (!getSubregions(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNameBytes());
      }
      for (int i = 0; i < subregions_.size(); i++) {
        output.writeMessage(5, subregions_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNameBytes());
      }
      for (int i = 0; i < subregions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, subregions_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.osmand.binary.OsmandIndex.RoutingPart parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.RoutingPart parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.RoutingPart parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.RoutingPart parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.RoutingPart parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.RoutingPart parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.RoutingPart parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.RoutingPart parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.RoutingPart parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.RoutingPart parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandIndex.RoutingPart prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code OsmAnd.OBF.RoutingPart}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          net.osmand.binary.OsmandIndex.RoutingPart, Builder>
        implements net.osmand.binary.OsmandIndex.RoutingPartOrBuilder {
      // Construct using net.osmand.binary.OsmandIndex.RoutingPart.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        size_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        offset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        subregions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public net.osmand.binary.OsmandIndex.RoutingPart getDefaultInstanceForType() {
        return net.osmand.binary.OsmandIndex.RoutingPart.getDefaultInstance();
      }

      public net.osmand.binary.OsmandIndex.RoutingPart build() {
        net.osmand.binary.OsmandIndex.RoutingPart result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.osmand.binary.OsmandIndex.RoutingPart buildPartial() {
        net.osmand.binary.OsmandIndex.RoutingPart result = new net.osmand.binary.OsmandIndex.RoutingPart(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.offset_ = offset_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.name_ = name_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          subregions_ = java.util.Collections.unmodifiableList(subregions_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.subregions_ = subregions_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(net.osmand.binary.OsmandIndex.RoutingPart other) {
        if (other == net.osmand.binary.OsmandIndex.RoutingPart.getDefaultInstance()) return this;
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000004;
          name_ = other.name_;
          
        }
        if (!other.subregions_.isEmpty()) {
          if (subregions_.isEmpty()) {
            subregions_ = other.subregions_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSubregionsIsMutable();
            subregions_.addAll(other.subregions_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSize()) {
          
          return false;
        }
        if (!hasOffset()) {
          
          return false;
        }
        for (int i = 0; i < getSubregionsCount(); i++) {
          if (!getSubregions(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.osmand.binary.OsmandIndex.RoutingPart parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.osmand.binary.OsmandIndex.RoutingPart) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 size = 1;
      private long size_ ;
      /**
       * <code>required int64 size = 1;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public long getSize() {
        return size_;
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public Builder setSize(long value) {
        bitField0_ |= 0x00000001;
        size_ = value;
        
        return this;
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0L;
        
        return this;
      }

      // required int64 offset = 2;
      private long offset_ ;
      /**
       * <code>required int64 offset = 2;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public long getOffset() {
        return offset_;
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public Builder setOffset(long value) {
        bitField0_ |= 0x00000002;
        offset_ = value;
        
        return this;
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000002);
        offset_ = 0L;
        
        return this;
      }

      // optional string name = 3;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 3;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = getDefaultInstance().getName();
        
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        
        return this;
      }

      // repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;
      private java.util.List<net.osmand.binary.OsmandIndex.RoutingSubregion> subregions_ =
        java.util.Collections.emptyList();
      private void ensureSubregionsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          subregions_ = new java.util.ArrayList<net.osmand.binary.OsmandIndex.RoutingSubregion>(subregions_);
          bitField0_ |= 0x00000008;
         }
      }

      /**
       * <code>repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;</code>
       */
      public java.util.List<net.osmand.binary.OsmandIndex.RoutingSubregion> getSubregionsList() {
        return java.util.Collections.unmodifiableList(subregions_);
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;</code>
       */
      public int getSubregionsCount() {
        return subregions_.size();
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;</code>
       */
      public net.osmand.binary.OsmandIndex.RoutingSubregion getSubregions(int index) {
        return subregions_.get(index);
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;</code>
       */
      public Builder setSubregions(
          int index, net.osmand.binary.OsmandIndex.RoutingSubregion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubregionsIsMutable();
        subregions_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;</code>
       */
      public Builder setSubregions(
          int index, net.osmand.binary.OsmandIndex.RoutingSubregion.Builder builderForValue) {
        ensureSubregionsIsMutable();
        subregions_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;</code>
       */
      public Builder addSubregions(net.osmand.binary.OsmandIndex.RoutingSubregion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubregionsIsMutable();
        subregions_.add(value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;</code>
       */
      public Builder addSubregions(
          int index, net.osmand.binary.OsmandIndex.RoutingSubregion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubregionsIsMutable();
        subregions_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;</code>
       */
      public Builder addSubregions(
          net.osmand.binary.OsmandIndex.RoutingSubregion.Builder builderForValue) {
        ensureSubregionsIsMutable();
        subregions_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;</code>
       */
      public Builder addSubregions(
          int index, net.osmand.binary.OsmandIndex.RoutingSubregion.Builder builderForValue) {
        ensureSubregionsIsMutable();
        subregions_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;</code>
       */
      public Builder addAllSubregions(
          java.lang.Iterable<? extends net.osmand.binary.OsmandIndex.RoutingSubregion> values) {
        ensureSubregionsIsMutable();
        super.addAll(values, subregions_);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;</code>
       */
      public Builder clearSubregions() {
        subregions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);

        return this;
      }
      /**
       * <code>repeated .OsmAnd.OBF.RoutingSubregion subregions = 5;</code>
       */
      public Builder removeSubregions(int index) {
        ensureSubregionsIsMutable();
        subregions_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.RoutingPart)
    }

    static {
      defaultInstance = new RoutingPart(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.RoutingPart)
  }

  public interface HHRoutingPartOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int64 size = 1;
    /**
     * <code>required int64 size = 1;</code>
     */
    boolean hasSize();
    /**
     * <code>required int64 size = 1;</code>
     */
    long getSize();

    // required int64 offset = 2;
    /**
     * <code>required int64 offset = 2;</code>
     */
    boolean hasOffset();
    /**
     * <code>required int64 offset = 2;</code>
     */
    long getOffset();

    // required int64 edition = 3;
    /**
     * <code>required int64 edition = 3;</code>
     */
    boolean hasEdition();
    /**
     * <code>required int64 edition = 3;</code>
     */
    long getEdition();

    // required string profile = 4;
    /**
     * <code>required string profile = 4;</code>
     */
    boolean hasProfile();
    /**
     * <code>required string profile = 4;</code>
     */
    java.lang.String getProfile();
    /**
     * <code>required string profile = 4;</code>
     */
    com.google.protobuf.ByteString
        getProfileBytes();

    // repeated string profileParams = 5;
    /**
     * <code>repeated string profileParams = 5;</code>
     */
    java.util.List<java.lang.String>
    getProfileParamsList();
    /**
     * <code>repeated string profileParams = 5;</code>
     */
    int getProfileParamsCount();
    /**
     * <code>repeated string profileParams = 5;</code>
     */
    java.lang.String getProfileParams(int index);
    /**
     * <code>repeated string profileParams = 5;</code>
     */
    com.google.protobuf.ByteString
        getProfileParamsBytes(int index);

    // required int32 pointsOffset = 7;
    /**
     * <code>required int32 pointsOffset = 7;</code>
     */
    boolean hasPointsOffset();
    /**
     * <code>required int32 pointsOffset = 7;</code>
     */
    int getPointsOffset();

    // required int32 pointsLength = 8;
    /**
     * <code>required int32 pointsLength = 8;</code>
     */
    boolean hasPointsLength();
    /**
     * <code>required int32 pointsLength = 8;</code>
     */
    int getPointsLength();

    // required int32 left = 9;
    /**
     * <code>required int32 left = 9;</code>
     */
    boolean hasLeft();
    /**
     * <code>required int32 left = 9;</code>
     */
    int getLeft();

    // required int32 right = 10;
    /**
     * <code>required int32 right = 10;</code>
     */
    boolean hasRight();
    /**
     * <code>required int32 right = 10;</code>
     */
    int getRight();

    // required int32 top = 11;
    /**
     * <code>required int32 top = 11;</code>
     */
    boolean hasTop();
    /**
     * <code>required int32 top = 11;</code>
     */
    int getTop();

    // required int32 bottom = 12;
    /**
     * <code>required int32 bottom = 12;</code>
     */
    boolean hasBottom();
    /**
     * <code>required int32 bottom = 12;</code>
     */
    int getBottom();
  }
  /**
   * Protobuf type {@code OsmAnd.OBF.HHRoutingPart}
   */
  public static final class HHRoutingPart extends
      com.google.protobuf.GeneratedMessageLite
      implements HHRoutingPartOrBuilder {
    // Use HHRoutingPart.newBuilder() to construct.
    private HHRoutingPart(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private HHRoutingPart(boolean noInit) {}

    private static final HHRoutingPart defaultInstance;
    public static HHRoutingPart getDefaultInstance() {
      return defaultInstance;
    }

    public HHRoutingPart getDefaultInstanceForType() {
      return defaultInstance;
    }

    private HHRoutingPart(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              size_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              offset_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              edition_ = input.readInt64();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              profile_ = input.readBytes();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                profileParams_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              profileParams_.add(input.readBytes());
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              pointsOffset_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              pointsLength_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              left_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              right_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              top_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000200;
              bottom_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          profileParams_ = new com.google.protobuf.UnmodifiableLazyStringList(profileParams_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<HHRoutingPart> PARSER =
        new com.google.protobuf.AbstractParser<HHRoutingPart>() {
      public HHRoutingPart parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HHRoutingPart(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HHRoutingPart> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 size = 1;
    public static final int SIZE_FIELD_NUMBER = 1;
    private long size_;
    /**
     * <code>required int64 size = 1;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 size = 1;</code>
     */
    public long getSize() {
      return size_;
    }

    // required int64 offset = 2;
    public static final int OFFSET_FIELD_NUMBER = 2;
    private long offset_;
    /**
     * <code>required int64 offset = 2;</code>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 offset = 2;</code>
     */
    public long getOffset() {
      return offset_;
    }

    // required int64 edition = 3;
    public static final int EDITION_FIELD_NUMBER = 3;
    private long edition_;
    /**
     * <code>required int64 edition = 3;</code>
     */
    public boolean hasEdition() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 edition = 3;</code>
     */
    public long getEdition() {
      return edition_;
    }

    // required string profile = 4;
    public static final int PROFILE_FIELD_NUMBER = 4;
    private java.lang.Object profile_;
    /**
     * <code>required string profile = 4;</code>
     */
    public boolean hasProfile() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string profile = 4;</code>
     */
    public java.lang.String getProfile() {
      java.lang.Object ref = profile_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          profile_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string profile = 4;</code>
     */
    public com.google.protobuf.ByteString
        getProfileBytes() {
      java.lang.Object ref = profile_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        profile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated string profileParams = 5;
    public static final int PROFILEPARAMS_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList profileParams_;
    /**
     * <code>repeated string profileParams = 5;</code>
     */
    public java.util.List<java.lang.String>
        getProfileParamsList() {
      return profileParams_;
    }
    /**
     * <code>repeated string profileParams = 5;</code>
     */
    public int getProfileParamsCount() {
      return profileParams_.size();
    }
    /**
     * <code>repeated string profileParams = 5;</code>
     */
    public java.lang.String getProfileParams(int index) {
      return profileParams_.get(index);
    }
    /**
     * <code>repeated string profileParams = 5;</code>
     */
    public com.google.protobuf.ByteString
        getProfileParamsBytes(int index) {
      return profileParams_.getByteString(index);
    }

    // required int32 pointsOffset = 7;
    public static final int POINTSOFFSET_FIELD_NUMBER = 7;
    private int pointsOffset_;
    /**
     * <code>required int32 pointsOffset = 7;</code>
     */
    public boolean hasPointsOffset() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 pointsOffset = 7;</code>
     */
    public int getPointsOffset() {
      return pointsOffset_;
    }

    // required int32 pointsLength = 8;
    public static final int POINTSLENGTH_FIELD_NUMBER = 8;
    private int pointsLength_;
    /**
     * <code>required int32 pointsLength = 8;</code>
     */
    public boolean hasPointsLength() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 pointsLength = 8;</code>
     */
    public int getPointsLength() {
      return pointsLength_;
    }

    // required int32 left = 9;
    public static final int LEFT_FIELD_NUMBER = 9;
    private int left_;
    /**
     * <code>required int32 left = 9;</code>
     */
    public boolean hasLeft() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 left = 9;</code>
     */
    public int getLeft() {
      return left_;
    }

    // required int32 right = 10;
    public static final int RIGHT_FIELD_NUMBER = 10;
    private int right_;
    /**
     * <code>required int32 right = 10;</code>
     */
    public boolean hasRight() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 right = 10;</code>
     */
    public int getRight() {
      return right_;
    }

    // required int32 top = 11;
    public static final int TOP_FIELD_NUMBER = 11;
    private int top_;
    /**
     * <code>required int32 top = 11;</code>
     */
    public boolean hasTop() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 top = 11;</code>
     */
    public int getTop() {
      return top_;
    }

    // required int32 bottom = 12;
    public static final int BOTTOM_FIELD_NUMBER = 12;
    private int bottom_;
    /**
     * <code>required int32 bottom = 12;</code>
     */
    public boolean hasBottom() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required int32 bottom = 12;</code>
     */
    public int getBottom() {
      return bottom_;
    }

    private void initFields() {
      size_ = 0L;
      offset_ = 0L;
      edition_ = 0L;
      profile_ = "";
      profileParams_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      pointsOffset_ = 0;
      pointsLength_ = 0;
      left_ = 0;
      right_ = 0;
      top_ = 0;
      bottom_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEdition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProfile()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPointsOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPointsLength()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLeft()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTop()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBottom()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, edition_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getProfileBytes());
      }
      for (int i = 0; i < profileParams_.size(); i++) {
        output.writeBytes(5, profileParams_.getByteString(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, pointsOffset_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(8, pointsLength_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(9, left_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(10, right_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(11, top_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(12, bottom_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, edition_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getProfileBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < profileParams_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(profileParams_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getProfileParamsList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, pointsOffset_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, pointsLength_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, left_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, right_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, top_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, bottom_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.osmand.binary.OsmandIndex.HHRoutingPart parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.HHRoutingPart parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.HHRoutingPart parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.HHRoutingPart parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.HHRoutingPart parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.HHRoutingPart parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.HHRoutingPart parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.HHRoutingPart parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.HHRoutingPart parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.HHRoutingPart parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandIndex.HHRoutingPart prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code OsmAnd.OBF.HHRoutingPart}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          net.osmand.binary.OsmandIndex.HHRoutingPart, Builder>
        implements net.osmand.binary.OsmandIndex.HHRoutingPartOrBuilder {
      // Construct using net.osmand.binary.OsmandIndex.HHRoutingPart.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        size_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        offset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        edition_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        profile_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        profileParams_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        pointsOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        pointsLength_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        left_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        right_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        top_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        bottom_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public net.osmand.binary.OsmandIndex.HHRoutingPart getDefaultInstanceForType() {
        return net.osmand.binary.OsmandIndex.HHRoutingPart.getDefaultInstance();
      }

      public net.osmand.binary.OsmandIndex.HHRoutingPart build() {
        net.osmand.binary.OsmandIndex.HHRoutingPart result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.osmand.binary.OsmandIndex.HHRoutingPart buildPartial() {
        net.osmand.binary.OsmandIndex.HHRoutingPart result = new net.osmand.binary.OsmandIndex.HHRoutingPart(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.offset_ = offset_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.edition_ = edition_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.profile_ = profile_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          profileParams_ = new com.google.protobuf.UnmodifiableLazyStringList(
              profileParams_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.profileParams_ = profileParams_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.pointsOffset_ = pointsOffset_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.pointsLength_ = pointsLength_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.left_ = left_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.right_ = right_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.top_ = top_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.bottom_ = bottom_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(net.osmand.binary.OsmandIndex.HHRoutingPart other) {
        if (other == net.osmand.binary.OsmandIndex.HHRoutingPart.getDefaultInstance()) return this;
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        if (other.hasEdition()) {
          setEdition(other.getEdition());
        }
        if (other.hasProfile()) {
          bitField0_ |= 0x00000008;
          profile_ = other.profile_;
          
        }
        if (!other.profileParams_.isEmpty()) {
          if (profileParams_.isEmpty()) {
            profileParams_ = other.profileParams_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureProfileParamsIsMutable();
            profileParams_.addAll(other.profileParams_);
          }
          
        }
        if (other.hasPointsOffset()) {
          setPointsOffset(other.getPointsOffset());
        }
        if (other.hasPointsLength()) {
          setPointsLength(other.getPointsLength());
        }
        if (other.hasLeft()) {
          setLeft(other.getLeft());
        }
        if (other.hasRight()) {
          setRight(other.getRight());
        }
        if (other.hasTop()) {
          setTop(other.getTop());
        }
        if (other.hasBottom()) {
          setBottom(other.getBottom());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSize()) {
          
          return false;
        }
        if (!hasOffset()) {
          
          return false;
        }
        if (!hasEdition()) {
          
          return false;
        }
        if (!hasProfile()) {
          
          return false;
        }
        if (!hasPointsOffset()) {
          
          return false;
        }
        if (!hasPointsLength()) {
          
          return false;
        }
        if (!hasLeft()) {
          
          return false;
        }
        if (!hasRight()) {
          
          return false;
        }
        if (!hasTop()) {
          
          return false;
        }
        if (!hasBottom()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.osmand.binary.OsmandIndex.HHRoutingPart parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.osmand.binary.OsmandIndex.HHRoutingPart) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 size = 1;
      private long size_ ;
      /**
       * <code>required int64 size = 1;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public long getSize() {
        return size_;
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public Builder setSize(long value) {
        bitField0_ |= 0x00000001;
        size_ = value;
        
        return this;
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0L;
        
        return this;
      }

      // required int64 offset = 2;
      private long offset_ ;
      /**
       * <code>required int64 offset = 2;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public long getOffset() {
        return offset_;
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public Builder setOffset(long value) {
        bitField0_ |= 0x00000002;
        offset_ = value;
        
        return this;
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000002);
        offset_ = 0L;
        
        return this;
      }

      // required int64 edition = 3;
      private long edition_ ;
      /**
       * <code>required int64 edition = 3;</code>
       */
      public boolean hasEdition() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 edition = 3;</code>
       */
      public long getEdition() {
        return edition_;
      }
      /**
       * <code>required int64 edition = 3;</code>
       */
      public Builder setEdition(long value) {
        bitField0_ |= 0x00000004;
        edition_ = value;
        
        return this;
      }
      /**
       * <code>required int64 edition = 3;</code>
       */
      public Builder clearEdition() {
        bitField0_ = (bitField0_ & ~0x00000004);
        edition_ = 0L;
        
        return this;
      }

      // required string profile = 4;
      private java.lang.Object profile_ = "";
      /**
       * <code>required string profile = 4;</code>
       */
      public boolean hasProfile() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string profile = 4;</code>
       */
      public java.lang.String getProfile() {
        java.lang.Object ref = profile_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          profile_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string profile = 4;</code>
       */
      public com.google.protobuf.ByteString
          getProfileBytes() {
        java.lang.Object ref = profile_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          profile_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string profile = 4;</code>
       */
      public Builder setProfile(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        profile_ = value;
        
        return this;
      }
      /**
       * <code>required string profile = 4;</code>
       */
      public Builder clearProfile() {
        bitField0_ = (bitField0_ & ~0x00000008);
        profile_ = getDefaultInstance().getProfile();
        
        return this;
      }
      /**
       * <code>required string profile = 4;</code>
       */
      public Builder setProfileBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        profile_ = value;
        
        return this;
      }

      // repeated string profileParams = 5;
      private com.google.protobuf.LazyStringList profileParams_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureProfileParamsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          profileParams_ = new com.google.protobuf.LazyStringArrayList(profileParams_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated string profileParams = 5;</code>
       */
      public java.util.List<java.lang.String>
          getProfileParamsList() {
        return java.util.Collections.unmodifiableList(profileParams_);
      }
      /**
       * <code>repeated string profileParams = 5;</code>
       */
      public int getProfileParamsCount() {
        return profileParams_.size();
      }
      /**
       * <code>repeated string profileParams = 5;</code>
       */
      public java.lang.String getProfileParams(int index) {
        return profileParams_.get(index);
      }
      /**
       * <code>repeated string profileParams = 5;</code>
       */
      public com.google.protobuf.ByteString
          getProfileParamsBytes(int index) {
        return profileParams_.getByteString(index);
      }
      /**
       * <code>repeated string profileParams = 5;</code>
       */
      public Builder setProfileParams(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureProfileParamsIsMutable();
        profileParams_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated string profileParams = 5;</code>
       */
      public Builder addProfileParams(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureProfileParamsIsMutable();
        profileParams_.add(value);
        
        return this;
      }
      /**
       * <code>repeated string profileParams = 5;</code>
       */
      public Builder addAllProfileParams(
          java.lang.Iterable<java.lang.String> values) {
        ensureProfileParamsIsMutable();
        super.addAll(values, profileParams_);
        
        return this;
      }
      /**
       * <code>repeated string profileParams = 5;</code>
       */
      public Builder clearProfileParams() {
        profileParams_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        
        return this;
      }
      /**
       * <code>repeated string profileParams = 5;</code>
       */
      public Builder addProfileParamsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureProfileParamsIsMutable();
        profileParams_.add(value);
        
        return this;
      }

      // required int32 pointsOffset = 7;
      private int pointsOffset_ ;
      /**
       * <code>required int32 pointsOffset = 7;</code>
       */
      public boolean hasPointsOffset() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 pointsOffset = 7;</code>
       */
      public int getPointsOffset() {
        return pointsOffset_;
      }
      /**
       * <code>required int32 pointsOffset = 7;</code>
       */
      public Builder setPointsOffset(int value) {
        bitField0_ |= 0x00000020;
        pointsOffset_ = value;
        
        return this;
      }
      /**
       * <code>required int32 pointsOffset = 7;</code>
       */
      public Builder clearPointsOffset() {
        bitField0_ = (bitField0_ & ~0x00000020);
        pointsOffset_ = 0;
        
        return this;
      }

      // required int32 pointsLength = 8;
      private int pointsLength_ ;
      /**
       * <code>required int32 pointsLength = 8;</code>
       */
      public boolean hasPointsLength() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 pointsLength = 8;</code>
       */
      public int getPointsLength() {
        return pointsLength_;
      }
      /**
       * <code>required int32 pointsLength = 8;</code>
       */
      public Builder setPointsLength(int value) {
        bitField0_ |= 0x00000040;
        pointsLength_ = value;
        
        return this;
      }
      /**
       * <code>required int32 pointsLength = 8;</code>
       */
      public Builder clearPointsLength() {
        bitField0_ = (bitField0_ & ~0x00000040);
        pointsLength_ = 0;
        
        return this;
      }

      // required int32 left = 9;
      private int left_ ;
      /**
       * <code>required int32 left = 9;</code>
       */
      public boolean hasLeft() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 left = 9;</code>
       */
      public int getLeft() {
        return left_;
      }
      /**
       * <code>required int32 left = 9;</code>
       */
      public Builder setLeft(int value) {
        bitField0_ |= 0x00000080;
        left_ = value;
        
        return this;
      }
      /**
       * <code>required int32 left = 9;</code>
       */
      public Builder clearLeft() {
        bitField0_ = (bitField0_ & ~0x00000080);
        left_ = 0;
        
        return this;
      }

      // required int32 right = 10;
      private int right_ ;
      /**
       * <code>required int32 right = 10;</code>
       */
      public boolean hasRight() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 right = 10;</code>
       */
      public int getRight() {
        return right_;
      }
      /**
       * <code>required int32 right = 10;</code>
       */
      public Builder setRight(int value) {
        bitField0_ |= 0x00000100;
        right_ = value;
        
        return this;
      }
      /**
       * <code>required int32 right = 10;</code>
       */
      public Builder clearRight() {
        bitField0_ = (bitField0_ & ~0x00000100);
        right_ = 0;
        
        return this;
      }

      // required int32 top = 11;
      private int top_ ;
      /**
       * <code>required int32 top = 11;</code>
       */
      public boolean hasTop() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required int32 top = 11;</code>
       */
      public int getTop() {
        return top_;
      }
      /**
       * <code>required int32 top = 11;</code>
       */
      public Builder setTop(int value) {
        bitField0_ |= 0x00000200;
        top_ = value;
        
        return this;
      }
      /**
       * <code>required int32 top = 11;</code>
       */
      public Builder clearTop() {
        bitField0_ = (bitField0_ & ~0x00000200);
        top_ = 0;
        
        return this;
      }

      // required int32 bottom = 12;
      private int bottom_ ;
      /**
       * <code>required int32 bottom = 12;</code>
       */
      public boolean hasBottom() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int32 bottom = 12;</code>
       */
      public int getBottom() {
        return bottom_;
      }
      /**
       * <code>required int32 bottom = 12;</code>
       */
      public Builder setBottom(int value) {
        bitField0_ |= 0x00000400;
        bottom_ = value;
        
        return this;
      }
      /**
       * <code>required int32 bottom = 12;</code>
       */
      public Builder clearBottom() {
        bitField0_ = (bitField0_ & ~0x00000400);
        bottom_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.HHRoutingPart)
    }

    static {
      defaultInstance = new HHRoutingPart(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.HHRoutingPart)
  }

  public interface TransportPartOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int64 size = 1;
    /**
     * <code>required int64 size = 1;</code>
     */
    boolean hasSize();
    /**
     * <code>required int64 size = 1;</code>
     */
    long getSize();

    // required int64 offset = 2;
    /**
     * <code>required int64 offset = 2;</code>
     */
    boolean hasOffset();
    /**
     * <code>required int64 offset = 2;</code>
     */
    long getOffset();

    // optional string name = 3;
    /**
     * <code>optional string name = 3;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int32 left = 4;
    /**
     * <code>optional int32 left = 4;</code>
     */
    boolean hasLeft();
    /**
     * <code>optional int32 left = 4;</code>
     */
    int getLeft();

    // optional int32 right = 5;
    /**
     * <code>optional int32 right = 5;</code>
     */
    boolean hasRight();
    /**
     * <code>optional int32 right = 5;</code>
     */
    int getRight();

    // optional int32 top = 6;
    /**
     * <code>optional int32 top = 6;</code>
     */
    boolean hasTop();
    /**
     * <code>optional int32 top = 6;</code>
     */
    int getTop();

    // optional int32 bottom = 7;
    /**
     * <code>optional int32 bottom = 7;</code>
     */
    boolean hasBottom();
    /**
     * <code>optional int32 bottom = 7;</code>
     */
    int getBottom();

    // optional uint32 stringTableOffset = 8;
    /**
     * <code>optional uint32 stringTableOffset = 8;</code>
     */
    boolean hasStringTableOffset();
    /**
     * <code>optional uint32 stringTableOffset = 8;</code>
     */
    int getStringTableOffset();

    // optional uint32 stringTableLength = 9;
    /**
     * <code>optional uint32 stringTableLength = 9;</code>
     */
    boolean hasStringTableLength();
    /**
     * <code>optional uint32 stringTableLength = 9;</code>
     */
    int getStringTableLength();

    // optional uint32 stopsTableOffset = 10;
    /**
     * <code>optional uint32 stopsTableOffset = 10;</code>
     */
    boolean hasStopsTableOffset();
    /**
     * <code>optional uint32 stopsTableOffset = 10;</code>
     */
    int getStopsTableOffset();

    // optional uint32 stopsTableLength = 11;
    /**
     * <code>optional uint32 stopsTableLength = 11;</code>
     */
    boolean hasStopsTableLength();
    /**
     * <code>optional uint32 stopsTableLength = 11;</code>
     */
    int getStopsTableLength();

    // optional uint32 incompleteRoutesOffset = 12;
    /**
     * <code>optional uint32 incompleteRoutesOffset = 12;</code>
     */
    boolean hasIncompleteRoutesOffset();
    /**
     * <code>optional uint32 incompleteRoutesOffset = 12;</code>
     */
    int getIncompleteRoutesOffset();

    // optional uint32 incompleteRoutesLength = 13;
    /**
     * <code>optional uint32 incompleteRoutesLength = 13;</code>
     */
    boolean hasIncompleteRoutesLength();
    /**
     * <code>optional uint32 incompleteRoutesLength = 13;</code>
     */
    int getIncompleteRoutesLength();
  }
  /**
   * Protobuf type {@code OsmAnd.OBF.TransportPart}
   */
  public static final class TransportPart extends
      com.google.protobuf.GeneratedMessageLite
      implements TransportPartOrBuilder {
    // Use TransportPart.newBuilder() to construct.
    private TransportPart(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private TransportPart(boolean noInit) {}

    private static final TransportPart defaultInstance;
    public static TransportPart getDefaultInstance() {
      return defaultInstance;
    }

    public TransportPart getDefaultInstanceForType() {
      return defaultInstance;
    }

    private TransportPart(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              size_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              offset_ = input.readInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              name_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              left_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              right_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              top_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              bottom_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              stringTableOffset_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              stringTableLength_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              stopsTableOffset_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              stopsTableLength_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              incompleteRoutesOffset_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              incompleteRoutesLength_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<TransportPart> PARSER =
        new com.google.protobuf.AbstractParser<TransportPart>() {
      public TransportPart parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TransportPart(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TransportPart> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 size = 1;
    public static final int SIZE_FIELD_NUMBER = 1;
    private long size_;
    /**
     * <code>required int64 size = 1;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 size = 1;</code>
     */
    public long getSize() {
      return size_;
    }

    // required int64 offset = 2;
    public static final int OFFSET_FIELD_NUMBER = 2;
    private long offset_;
    /**
     * <code>required int64 offset = 2;</code>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 offset = 2;</code>
     */
    public long getOffset() {
      return offset_;
    }

    // optional string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 3;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 left = 4;
    public static final int LEFT_FIELD_NUMBER = 4;
    private int left_;
    /**
     * <code>optional int32 left = 4;</code>
     */
    public boolean hasLeft() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 left = 4;</code>
     */
    public int getLeft() {
      return left_;
    }

    // optional int32 right = 5;
    public static final int RIGHT_FIELD_NUMBER = 5;
    private int right_;
    /**
     * <code>optional int32 right = 5;</code>
     */
    public boolean hasRight() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 right = 5;</code>
     */
    public int getRight() {
      return right_;
    }

    // optional int32 top = 6;
    public static final int TOP_FIELD_NUMBER = 6;
    private int top_;
    /**
     * <code>optional int32 top = 6;</code>
     */
    public boolean hasTop() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 top = 6;</code>
     */
    public int getTop() {
      return top_;
    }

    // optional int32 bottom = 7;
    public static final int BOTTOM_FIELD_NUMBER = 7;
    private int bottom_;
    /**
     * <code>optional int32 bottom = 7;</code>
     */
    public boolean hasBottom() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 bottom = 7;</code>
     */
    public int getBottom() {
      return bottom_;
    }

    // optional uint32 stringTableOffset = 8;
    public static final int STRINGTABLEOFFSET_FIELD_NUMBER = 8;
    private int stringTableOffset_;
    /**
     * <code>optional uint32 stringTableOffset = 8;</code>
     */
    public boolean hasStringTableOffset() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 stringTableOffset = 8;</code>
     */
    public int getStringTableOffset() {
      return stringTableOffset_;
    }

    // optional uint32 stringTableLength = 9;
    public static final int STRINGTABLELENGTH_FIELD_NUMBER = 9;
    private int stringTableLength_;
    /**
     * <code>optional uint32 stringTableLength = 9;</code>
     */
    public boolean hasStringTableLength() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 stringTableLength = 9;</code>
     */
    public int getStringTableLength() {
      return stringTableLength_;
    }

    // optional uint32 stopsTableOffset = 10;
    public static final int STOPSTABLEOFFSET_FIELD_NUMBER = 10;
    private int stopsTableOffset_;
    /**
     * <code>optional uint32 stopsTableOffset = 10;</code>
     */
    public boolean hasStopsTableOffset() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 stopsTableOffset = 10;</code>
     */
    public int getStopsTableOffset() {
      return stopsTableOffset_;
    }

    // optional uint32 stopsTableLength = 11;
    public static final int STOPSTABLELENGTH_FIELD_NUMBER = 11;
    private int stopsTableLength_;
    /**
     * <code>optional uint32 stopsTableLength = 11;</code>
     */
    public boolean hasStopsTableLength() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 stopsTableLength = 11;</code>
     */
    public int getStopsTableLength() {
      return stopsTableLength_;
    }

    // optional uint32 incompleteRoutesOffset = 12;
    public static final int INCOMPLETEROUTESOFFSET_FIELD_NUMBER = 12;
    private int incompleteRoutesOffset_;
    /**
     * <code>optional uint32 incompleteRoutesOffset = 12;</code>
     */
    public boolean hasIncompleteRoutesOffset() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 incompleteRoutesOffset = 12;</code>
     */
    public int getIncompleteRoutesOffset() {
      return incompleteRoutesOffset_;
    }

    // optional uint32 incompleteRoutesLength = 13;
    public static final int INCOMPLETEROUTESLENGTH_FIELD_NUMBER = 13;
    private int incompleteRoutesLength_;
    /**
     * <code>optional uint32 incompleteRoutesLength = 13;</code>
     */
    public boolean hasIncompleteRoutesLength() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 incompleteRoutesLength = 13;</code>
     */
    public int getIncompleteRoutesLength() {
      return incompleteRoutesLength_;
    }

    private void initFields() {
      size_ = 0L;
      offset_ = 0L;
      name_ = "";
      left_ = 0;
      right_ = 0;
      top_ = 0;
      bottom_ = 0;
      stringTableOffset_ = 0;
      stringTableLength_ = 0;
      stopsTableOffset_ = 0;
      stopsTableLength_ = 0;
      incompleteRoutesOffset_ = 0;
      incompleteRoutesLength_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, left_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, right_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, top_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, bottom_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, stringTableOffset_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, stringTableLength_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, stopsTableOffset_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, stopsTableLength_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(12, incompleteRoutesOffset_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(13, incompleteRoutesLength_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, left_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, right_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, top_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, bottom_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, stringTableOffset_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, stringTableLength_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, stopsTableOffset_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, stopsTableLength_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, incompleteRoutesOffset_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, incompleteRoutesLength_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.osmand.binary.OsmandIndex.TransportPart parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.TransportPart parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.TransportPart parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.osmand.binary.OsmandIndex.TransportPart parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.TransportPart parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.TransportPart parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.TransportPart parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.TransportPart parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.osmand.binary.OsmandIndex.TransportPart parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.osmand.binary.OsmandIndex.TransportPart parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandIndex.TransportPart prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code OsmAnd.OBF.TransportPart}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          net.osmand.binary.OsmandIndex.TransportPart, Builder>
        implements net.osmand.binary.OsmandIndex.TransportPartOrBuilder {
      // Construct using net.osmand.binary.OsmandIndex.TransportPart.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        size_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        offset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        left_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        right_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        top_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        bottom_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        stringTableOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        stringTableLength_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        stopsTableOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        stopsTableLength_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        incompleteRoutesOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        incompleteRoutesLength_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public net.osmand.binary.OsmandIndex.TransportPart getDefaultInstanceForType() {
        return net.osmand.binary.OsmandIndex.TransportPart.getDefaultInstance();
      }

      public net.osmand.binary.OsmandIndex.TransportPart build() {
        net.osmand.binary.OsmandIndex.TransportPart result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.osmand.binary.OsmandIndex.TransportPart buildPartial() {
        net.osmand.binary.OsmandIndex.TransportPart result = new net.osmand.binary.OsmandIndex.TransportPart(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.offset_ = offset_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.left_ = left_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.right_ = right_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.top_ = top_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.bottom_ = bottom_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.stringTableOffset_ = stringTableOffset_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.stringTableLength_ = stringTableLength_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.stopsTableOffset_ = stopsTableOffset_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.stopsTableLength_ = stopsTableLength_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.incompleteRoutesOffset_ = incompleteRoutesOffset_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.incompleteRoutesLength_ = incompleteRoutesLength_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(net.osmand.binary.OsmandIndex.TransportPart other) {
        if (other == net.osmand.binary.OsmandIndex.TransportPart.getDefaultInstance()) return this;
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000004;
          name_ = other.name_;
          
        }
        if (other.hasLeft()) {
          setLeft(other.getLeft());
        }
        if (other.hasRight()) {
          setRight(other.getRight());
        }
        if (other.hasTop()) {
          setTop(other.getTop());
        }
        if (other.hasBottom()) {
          setBottom(other.getBottom());
        }
        if (other.hasStringTableOffset()) {
          setStringTableOffset(other.getStringTableOffset());
        }
        if (other.hasStringTableLength()) {
          setStringTableLength(other.getStringTableLength());
        }
        if (other.hasStopsTableOffset()) {
          setStopsTableOffset(other.getStopsTableOffset());
        }
        if (other.hasStopsTableLength()) {
          setStopsTableLength(other.getStopsTableLength());
        }
        if (other.hasIncompleteRoutesOffset()) {
          setIncompleteRoutesOffset(other.getIncompleteRoutesOffset());
        }
        if (other.hasIncompleteRoutesLength()) {
          setIncompleteRoutesLength(other.getIncompleteRoutesLength());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSize()) {
          
          return false;
        }
        if (!hasOffset()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.osmand.binary.OsmandIndex.TransportPart parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.osmand.binary.OsmandIndex.TransportPart) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 size = 1;
      private long size_ ;
      /**
       * <code>required int64 size = 1;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public long getSize() {
        return size_;
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public Builder setSize(long value) {
        bitField0_ |= 0x00000001;
        size_ = value;
        
        return this;
      }
      /**
       * <code>required int64 size = 1;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0L;
        
        return this;
      }

      // required int64 offset = 2;
      private long offset_ ;
      /**
       * <code>required int64 offset = 2;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public long getOffset() {
        return offset_;
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public Builder setOffset(long value) {
        bitField0_ |= 0x00000002;
        offset_ = value;
        
        return this;
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000002);
        offset_ = 0L;
        
        return this;
      }

      // optional string name = 3;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 3;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = getDefaultInstance().getName();
        
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        
        return this;
      }

      // optional int32 left = 4;
      private int left_ ;
      /**
       * <code>optional int32 left = 4;</code>
       */
      public boolean hasLeft() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 left = 4;</code>
       */
      public int getLeft() {
        return left_;
      }
      /**
       * <code>optional int32 left = 4;</code>
       */
      public Builder setLeft(int value) {
        bitField0_ |= 0x00000008;
        left_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 left = 4;</code>
       */
      public Builder clearLeft() {
        bitField0_ = (bitField0_ & ~0x00000008);
        left_ = 0;
        
        return this;
      }

      // optional int32 right = 5;
      private int right_ ;
      /**
       * <code>optional int32 right = 5;</code>
       */
      public boolean hasRight() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 right = 5;</code>
       */
      public int getRight() {
        return right_;
      }
      /**
       * <code>optional int32 right = 5;</code>
       */
      public Builder setRight(int value) {
        bitField0_ |= 0x00000010;
        right_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 right = 5;</code>
       */
      public Builder clearRight() {
        bitField0_ = (bitField0_ & ~0x00000010);
        right_ = 0;
        
        return this;
      }

      // optional int32 top = 6;
      private int top_ ;
      /**
       * <code>optional int32 top = 6;</code>
       */
      public boolean hasTop() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 top = 6;</code>
       */
      public int getTop() {
        return top_;
      }
      /**
       * <code>optional int32 top = 6;</code>
       */
      public Builder setTop(int value) {
        bitField0_ |= 0x00000020;
        top_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 top = 6;</code>
       */
      public Builder clearTop() {
        bitField0_ = (bitField0_ & ~0x00000020);
        top_ = 0;
        
        return this;
      }

      // optional int32 bottom = 7;
      private int bottom_ ;
      /**
       * <code>optional int32 bottom = 7;</code>
       */
      public boolean hasBottom() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 bottom = 7;</code>
       */
      public int getBottom() {
        return bottom_;
      }
      /**
       * <code>optional int32 bottom = 7;</code>
       */
      public Builder setBottom(int value) {
        bitField0_ |= 0x00000040;
        bottom_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 bottom = 7;</code>
       */
      public Builder clearBottom() {
        bitField0_ = (bitField0_ & ~0x00000040);
        bottom_ = 0;
        
        return this;
      }

      // optional uint32 stringTableOffset = 8;
      private int stringTableOffset_ ;
      /**
       * <code>optional uint32 stringTableOffset = 8;</code>
       */
      public boolean hasStringTableOffset() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 stringTableOffset = 8;</code>
       */
      public int getStringTableOffset() {
        return stringTableOffset_;
      }
      /**
       * <code>optional uint32 stringTableOffset = 8;</code>
       */
      public Builder setStringTableOffset(int value) {
        bitField0_ |= 0x00000080;
        stringTableOffset_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 stringTableOffset = 8;</code>
       */
      public Builder clearStringTableOffset() {
        bitField0_ = (bitField0_ & ~0x00000080);
        stringTableOffset_ = 0;
        
        return this;
      }

      // optional uint32 stringTableLength = 9;
      private int stringTableLength_ ;
      /**
       * <code>optional uint32 stringTableLength = 9;</code>
       */
      public boolean hasStringTableLength() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 stringTableLength = 9;</code>
       */
      public int getStringTableLength() {
        return stringTableLength_;
      }
      /**
       * <code>optional uint32 stringTableLength = 9;</code>
       */
      public Builder setStringTableLength(int value) {
        bitField0_ |= 0x00000100;
        stringTableLength_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 stringTableLength = 9;</code>
       */
      public Builder clearStringTableLength() {
        bitField0_ = (bitField0_ & ~0x00000100);
        stringTableLength_ = 0;
        
        return this;
      }

      // optional uint32 stopsTableOffset = 10;
      private int stopsTableOffset_ ;
      /**
       * <code>optional uint32 stopsTableOffset = 10;</code>
       */
      public boolean hasStopsTableOffset() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 stopsTableOffset = 10;</code>
       */
      public int getStopsTableOffset() {
        return stopsTableOffset_;
      }
      /**
       * <code>optional uint32 stopsTableOffset = 10;</code>
       */
      public Builder setStopsTableOffset(int value) {
        bitField0_ |= 0x00000200;
        stopsTableOffset_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 stopsTableOffset = 10;</code>
       */
      public Builder clearStopsTableOffset() {
        bitField0_ = (bitField0_ & ~0x00000200);
        stopsTableOffset_ = 0;
        
        return this;
      }

      // optional uint32 stopsTableLength = 11;
      private int stopsTableLength_ ;
      /**
       * <code>optional uint32 stopsTableLength = 11;</code>
       */
      public boolean hasStopsTableLength() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 stopsTableLength = 11;</code>
       */
      public int getStopsTableLength() {
        return stopsTableLength_;
      }
      /**
       * <code>optional uint32 stopsTableLength = 11;</code>
       */
      public Builder setStopsTableLength(int value) {
        bitField0_ |= 0x00000400;
        stopsTableLength_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 stopsTableLength = 11;</code>
       */
      public Builder clearStopsTableLength() {
        bitField0_ = (bitField0_ & ~0x00000400);
        stopsTableLength_ = 0;
        
        return this;
      }

      // optional uint32 incompleteRoutesOffset = 12;
      private int incompleteRoutesOffset_ ;
      /**
       * <code>optional uint32 incompleteRoutesOffset = 12;</code>
       */
      public boolean hasIncompleteRoutesOffset() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 incompleteRoutesOffset = 12;</code>
       */
      public int getIncompleteRoutesOffset() {
        return incompleteRoutesOffset_;
      }
      /**
       * <code>optional uint32 incompleteRoutesOffset = 12;</code>
       */
      public Builder setIncompleteRoutesOffset(int value) {
        bitField0_ |= 0x00000800;
        incompleteRoutesOffset_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 incompleteRoutesOffset = 12;</code>
       */
      public Builder clearIncompleteRoutesOffset() {
        bitField0_ = (bitField0_ & ~0x00000800);
        incompleteRoutesOffset_ = 0;
        
        return this;
      }

      // optional uint32 incompleteRoutesLength = 13;
      private int incompleteRoutesLength_ ;
      /**
       * <code>optional uint32 incompleteRoutesLength = 13;</code>
       */
      public boolean hasIncompleteRoutesLength() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 incompleteRoutesLength = 13;</code>
       */
      public int getIncompleteRoutesLength() {
        return incompleteRoutesLength_;
      }
      /**
       * <code>optional uint32 incompleteRoutesLength = 13;</code>
       */
      public Builder setIncompleteRoutesLength(int value) {
        bitField0_ |= 0x00001000;
        incompleteRoutesLength_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 incompleteRoutesLength = 13;</code>
       */
      public Builder clearIncompleteRoutesLength() {
        bitField0_ = (bitField0_ & ~0x00001000);
        incompleteRoutesLength_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.TransportPart)
    }

    static {
      defaultInstance = new TransportPart(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.TransportPart)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
