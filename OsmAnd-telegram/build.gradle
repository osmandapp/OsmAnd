apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
	compileSdk 34
	buildToolsVersion = "34.0.0"
	namespace = "net.osmand.telegram"

	compileOptions {
		sourceCompatibility = JavaVersion.VERSION_17
		targetCompatibility = JavaVersion.VERSION_17
	}

	sourceSets {
		main {
			manifest.srcFile "AndroidManifest.xml"
			jni.srcDirs = []
			jniLibs.srcDirs = ["libs"]
			aidl.srcDirs = ["src"]
			java.srcDirs = ["src"]
			resources.srcDirs = ["src"]
			res.srcDirs = ["res"]
			assets.srcDirs = ["assets"]
		}
	}

	defaultConfig {
		applicationId "net.osmand.telegram"
		minSdkVersion 24
		targetSdkVersion 34
		multiDexEnabled true
		versionCode 1
		versionCode System.getenv("APK_NUMBER_VERSION") ? System.getenv("APK_NUMBER_VERSION").toInteger() : versionCode
		versionName "1.0"
		versionName System.getenv("APK_VERSION") ? System.getenv("APK_VERSION").toString() : versionName
	}

	flavorDimensions "abi"

	productFlavors {
		x86 {
			dimension "abi"
			ndk {
				abiFilter "x86"
			}
		}
		armv7 {
			dimension "abi"
			ndk {
				abiFilter "armeabi-v7a"
			}
		}
		arm64 {
			dimension "abi"
			ndk {
				abiFilter "arm64-v8a"
			}
		}
		fat {
			dimension "abi"
		}
	}

	signingConfigs {
		development {
			storeFile file("../keystores/debug.keystore")
			storePassword "android"
			keyAlias "androiddebugkey"
			keyPassword "android"
		}

		publishing {
			storeFile file("/var/lib/jenkins/osmand_key")
			storePassword System.getenv("OSMAND_APK_PASSWORD")
			keyAlias "osmand"
			keyPassword System.getenv("OSMAND_APK_PASSWORD")
		}
	}


	buildTypes {
		debug {
			signingConfig signingConfigs.development
			applicationIdSuffix ".debug"
		}
		release {
			signingConfig signingConfigs.publishing
		}
	}


	lintOptions {
		// use this line to check all rules except those listed
		disable 'InvalidPackage'
		disable 'MissingTranslation'
	}

	packagingOptions {
		exclude 'META-INF/proguard/androidx-annotations.pro'
	}
	buildFeatures {
		aidl true
	}

	applicationVariants.configureEach {
		def variant = it
		def taskName = variant.name.capitalize()
		def mergeAssetsTaskName = "merge${taskName}Assets"
		tasks.named(mergeAssetsTaskName).configure { osmandTask ->
			println(osmandTask.getName())
			osmandTask.dependsOn(collectFonts)
		}
		def mapSourceSetPathsName= "map${taskName}SourceSetPaths"
		tasks.named(mapSourceSetPathsName).configure { osmandTask ->
			println(osmandTask.getName())
		}
	}

}

tasks.register('downloadTdLibzip') {
	doLast {
		ant.get(src: 'https://osmand.net/uploads/libs/tdlib.zip', dest: 'tdlib.zip', skipexisting: 'true')
		ant.unzip(src: 'tdlib.zip', dest: 'tdlib/')
	}
}

tasks.register('copyNativeLibs', Copy) {
	dependsOn downloadTdLibzip
	from "tdlib/tdlib/libs"
	into "libs"
}

tasks.register('copyJavaSources', Copy) {
	dependsOn downloadTdLibzip
	from "tdlib/tdlib/java"
	into "src"
}

tasks.register('downloadPrebuiltTelegram') {
	dependsOn downloadTdLibzip, copyNativeLibs, copyJavaSources
}

tasks.register('collectFonts', Copy) {
	from "../../resources/fonts"
	from "../../resources/fonts-telegram"
	into "assets/fonts"
	include "*.ttf"
}

tasks.register('collectExternalResources') {
	dependsOn collectFonts
}

afterEvaluate {
	android.applicationVariants.configureEach { variant ->
		variant.javaCompileProvider.configure { compileTask ->
			compileTask.dependsOn downloadPrebuiltTelegram, collectExternalResources
		}
		variant.preBuildProvider.configure { preBuildTask ->
			preBuildTask.dependsOn downloadPrebuiltTelegram
		}
	}
}

dependencies {
	implementation project(path: ':OsmAnd-java', configuration: 'android')
	implementation fileTree(dir: 'libs', include: ['*.jar'])

	implementation 'androidx.multidex:multidex:2.0.1'
	implementation 'androidx.appcompat:appcompat:1.6.1'
	implementation 'com.google.android.material:material:1.9.0'
	implementation 'androidx.browser:browser:1.0.0'
	implementation 'androidx.annotation:annotation:1.6.0'
	implementation 'commons-logging:commons-logging-api:1.1'
	implementation 'androidx.recyclerview:recyclerview:1.1.0'
	implementation 'com.vividsolutions:jts-core:1.14.0'
	implementation("com.github.HITGIF:TextFieldBoxes:1.4.5") {
		exclude group: 'com.android.support'
	}

	implementation 'com.google.android.gms:play-services-location:21.3.0'
}
